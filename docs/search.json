[{"path":"https://growthcharts.org/brokenstick/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Stef van Buuren Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/brokenstick.html","id":"what-is-the-broken-stick-model","dir":"Articles","previous_headings":"","what":"What is the broken stick model?","title":"Getting started","text":"broken stick model describes set individual curves linear mixed model using second-order linear B-splines. model can used smooth growth curves series connected straight lines; align irregularly observed curves common age grid; create synthetic curves user-specified set break ages; estimate time--time correlation matrix; predict future observations. user specifies set break ages straight lines connect. individual obtains estimate break age, set estimates individual form smoothed version observed trajectory.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/brokenstick.html","id":"what-are-the-main-model-assumptions","dir":"Articles","previous_headings":"","what":"What are the main model assumptions?","title":"Getting started","text":"main assumptions broken stick model : development break ages follows straight line; Broken stick estimates follow common multivariate normal distribution; order conform assumption multivariate normality, user may fit broken stick model suitably transformed data yield standard normal (\\(Z\\)) scale.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/brokenstick.html","id":"why-should-i-want-to-use-the-broken-stick-model","dir":"Articles","previous_headings":"","what":"Why should I want to use the broken stick model?","title":"Getting started","text":"Three unique features broken stick model : Modular: Issues related nonlinearities growth curves observed scale can treated separately, .e., outside broken stick model; Local: given data point contribute estimates corresponding closest break ages; Exportable: broken stick model can exported reused prediction new data alternative computing environments.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/brokenstick.html","id":"what-is-in-the-package","dir":"Articles","previous_headings":"","what":"What is in the package?","title":"Getting started","text":"brokenstick package contains functions fit, predict plot data. See reference page overview.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/brokenstick.html","id":"acknowledgement","dir":"Articles","previous_headings":"","what":"Acknowledgement","title":"Getting started","text":"Development brokenstick package kindly supported Healthy Birth Growth Development knowledge integration (HBGDki) program Bill & Melinda Gates Foundation.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Overview of main functions","text":"vignette demonstrates three major functions brokenstick package: brokenstick(), predict() plot(). also need dplyr ggplot2. elaborate documentation, visit https://growthcharts.org/brokenstick/articles/manual/manual.html.","code":"require(\"brokenstick\") require(\"dplyr\") library(\"ggplot2\")"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"plot-trajectories","dir":"Articles","previous_headings":"","what":"Plot trajectories","title":"Overview of main functions","text":"smocc_200 data brokenstick package contain heights 200 Dutch children measured 10 visits ages 0-2 years.  Figure 1 dispays data first 500 rows set growth curves Dutch children. Curves steeper first months, child growth faster young infants. Note also cross-overs first half year, whereas fewer occur later. means relative positions settled age 2 years, - put differently - correlation time points ages high.  Figure 2 dispays data, vertical axis changed Standard Deviation Scores (SDS), \\(Z\\)-score. \\(Z\\)-score height corrected age relative Dutch height reference Fourth Dutch Growth Study. \\(Z\\)-score transformation takes away major time trend, curves less flat. allows us see detailed assessment individual growth. plots also show measurements clustered around ten ages: birth, 1, 2, 3, 6, 9, 12, 15, 18 24 months. design followed rigorously study, variation timing inevitable weekends, holidays, sickness, events. timing variation poses problem directly compare measurement different children (especially figure 1). Also, easily construct “broad” matrix 10 time point per child. course, can divide time axis ten age groups, treat point within age group measured point. probably good strategy nicely looking data - -, approach problematic data irregular time intervals, multiple measurement per age group, measurement schedules vary child, data combined studies employed different designs. brokenstick package contains tools approximate observed data series connecting straight lines. lines closely follow data, may replace trajectory values breakpoints. statistical analysis can done regularised trajectories, easier working observed data.","code":"data <- brokenstick::smocc_200 head(data, 3) ## # A tibble: 3 × 7 ##      id    age sex       ga    bw   hgt hgt_z ##   <dbl>  <dbl> <chr>  <dbl> <dbl> <dbl> <dbl> ## 1 10001 0      female    40  3960  52   0.575 ## 2 10001 0.0821 female    40  3960  55.6 0.888 ## 3 10001 0.159  female    40  3960  58.2 0.797 ggplot(data[1:500, ], aes(x = age, y = hgt_z, group = id, color = as.factor(id))) +   geom_line(size = 0.1) +    geom_point(size = 0.7) +   scale_colour_viridis_d(option = \"cividis\") +   xlab(\"Age (years)\") +   ylab(\"Length SDS\") +   theme_light() +   theme(legend.position = \"none\")"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"fit-broken-stick-model-with-one-line","dir":"Articles","previous_headings":"","what":"Fit broken stick model with one line","title":"Overview of main functions","text":"fit trivial broken stick model just one line ages birth two years, plot trajectories three selected children follows:  following plot displays data, standardised units increase analytic resolution:  Note approximations describe individual trend data, address systematic deviations trend.","code":"set.seed(123) fit <- brokenstick(hgt ~ age | id, data, knots = c(0, 2)) ids <- c(10001, 10005, 10022) plot(fit, group = ids,       xlab = \"Age (years)\", ylab = \"Length (cm)\") fit0 <- brokenstick(hgt_z ~ age | id, data, knots = c(0, 2)) plot(fit0, group = ids,      xlab = \"Age (years)\", ylab = \"Length (SDS)\")"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"fit-broken-stick-model-with-two-lines","dir":"Articles","previous_headings":"","what":"Fit broken stick model with two lines","title":"Overview of main functions","text":"broken stick model describes trajectory series connected straight lines. first calculate model two connected lines. first line starts birth end age exactly 1 years. second line spans period 1 2 years. addition, lines must connect age 1 year. estimate plot model follows:  plot shows two-line model still fairly crude. fit2 object holds parameter estimates model: console output lists knots model, including left right boundary knots 0 2.6776. row means correspond fixed effect estimates linear mixed model. may interpret global means. Next, output lists variance-covariance matrix random effects. model contains 16 parameters total: four fixed effects (means), four random effects (diagonal elements), 6 covariance (-diagonal elements) 2 error variances (one residual error variance, one variability error per cluster). parameters enough reconstruct broken stick model, apply new data.","code":"fit2 <- brokenstick(hgt_z ~ age | id, data = data, knots = c(0, 1, 2)) plot(fit2, group = ids, xlab = \"Age (years)\", ylab = \"Length (SDS)\") summary(fit2) ## Class        brokenstick (kr) ## Variables    hgt_z (outcome), age (predictor), id (group) ## Data         1942 (n), 36 (nmis), 200 (groups) ## Parameters   16 (total), 4 (fixed), 4 (variance), 6 (covariance), 2 (error) ## Knots        0 1 2 2.68  ## Means        -0.039 0.028 0.065 0.17  ## Residuals    0.113 0.146 0.168 0.195 0.383 (min, P25, P50, P75, max) ## Mean resid   0.179  ## R-squared    0.867  ##  ## Variance-covariance matrix ##             age_0  age_1  age_2 age_2.6776 ## age_0       1.218                          ## age_1       0.481  0.823                   ## age_2       0.485  0.782  0.884            ## age_2.6776 -0.175 -0.013 -0.131      2.302"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"extend-to-nine-lines","dir":"Articles","previous_headings":"","what":"Extend to nine lines","title":"Overview of main functions","text":"refine model first two years adding knot age visit scheduled. model can run optimization problem difficult, takes slightly longer run. results nine-line model summarises data 79 parameters. model fits substantially better. model residuals substantially smaller (0.075 instead 0.179) proportions explained variance much higher (0.983 instead 0.867).  figure shows nine-line broken stick model fits observed data well.","code":"knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24)/12, 4) fit9 <- brokenstick(hgt_z ~ age | id, data = data, knots = knots) summary(fit9) ## Class        brokenstick (kr) ## Variables    hgt_z (outcome), age (predictor), id (group) ## Data         1942 (n), 36 (nmis), 200 (groups) ## Parameters   79 (total), 11 (fixed), 11 (variance), 55 (covariance), 2 (error) ## Knots        0 0.0833 0.167 0.25 0.5 0.75 1 1.25 1.5 2 2.68  ## Means        -0.186 0.022 0.003 0.066 0.063 -0.02 0.008 0.032 -0.027 0.115 -0.007  ## Residuals    0.0176 0.0268 0.0329 0.0494 4.52 (min, P25, P50, P75, max) ## Mean resid   0.0752  ## R-squared    0.983  ##  ## Variance-covariance matrix ##            age_0 age_0.0833 age_0.1667 age_0.25 age_0.5 age_0.75 age_1 age_1.25 ## age_0       1.74                                                                ## age_0.0833 1.118      1.337                                                     ## age_0.1667 1.077      1.095      1.246                                          ## age_0.25     0.9      1.005      0.999    1.052                                 ## age_0.5    0.627      0.821      0.822    0.815   0.943                         ## age_0.75   0.597      0.696      0.693    0.718   0.867    0.938                ## age_1      0.495      0.611      0.579    0.606   0.786    0.819 0.869          ## age_1.25   0.432      0.614      0.575    0.601   0.757    0.807 0.834    0.953 ## age_1.5    0.455      0.614      0.624    0.604   0.808    0.824 0.836    0.914 ## age_2      0.361      0.483      0.517    0.539    0.72    0.753 0.783    0.883 ## age_2.6776 0.818      0.791      0.584    0.731   0.498    0.561  0.41    0.567 ##            age_1.5 age_2 age_2.6776 ## age_0                               ## age_0.0833                          ## age_0.1667                          ## age_0.25                            ## age_0.5                             ## age_0.75                            ## age_1                               ## age_1.25                            ## age_1.5      1.039                  ## age_2        0.919 1.058            ## age_2.6776   0.452 0.017      8.922"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"obtain-predicted-values","dir":"Articles","previous_headings":"","what":"Obtain predicted values","title":"Overview of main functions","text":"predict() function allows us obtain various types predictions broken stick model. simplest call produces tibble one column called .pred row data. can bind column .pred data processing. Sometimes, also want prediction knot values, example, create graphs contain observed modelled trajectories. obtain predictions knots special x = \"knots\" argument, e.g. use include_data = FALSE argument remove predictions observed data. output verbose includes grid knots child (id, age). column .source equal added rows non-observed data. Note also knots ages 0.00 2.68 years. boundary knots, added brokenstick() function. boundary knots effectively filter observations enter calculations. default, boundary knots span age range data. technical reasons, broken stick model also defines estimates parameters knots, may general ignored, especially data near boundary knots sparse. wish obtain estimates knots observed data use: return 1942 rows data 800 rows knots.","code":"p1 <- predict(fit2) head(p1) ##   .pred ## 1 0.720 ## 2 0.660 ## 3 0.604 ## 4 0.534 ## 5 0.352 ## 6 0.171 identical(nrow(data), nrow(p1)) ## [1] TRUE p2 <- predict(fit2, x = \"knots\", include_data = FALSE) head(p2) ##   .source    id  age  sex ga bw hgt hgt_z    .pred ## 1   added 10001 0.00 <NA> NA NA  NA    NA  0.71989 ## 2   added 10001 1.00 <NA> NA NA  NA    NA -0.00939 ## 3   added 10001 2.00 <NA> NA NA  NA    NA  0.05785 ## 4   added 10001 2.68 <NA> NA NA  NA    NA  0.05481 ## 5   added 10002 0.00 <NA> NA NA  NA    NA -0.23264 ## 6   added 10002 1.00 <NA> NA NA  NA    NA -0.37772 nrow(p2) ## [1] 800 p3 <- predict(fit2, x = \"knots\") table(p3$.source) ##  ## added  data  ##   800  1942"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"explained-variance","dir":"Articles","previous_headings":"","what":"Explained variance","title":"Overview of main functions","text":"proportion variance outcome explained two-line model second model get nine-line broken stick model explains 98 percent variance height SDS.","code":"get_r2(fit2) ## [1] 0.867 get_r2(fit9) ## [1] 0.983"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"subject-level-analysis","dir":"Articles","previous_headings":"","what":"Subject level analysis","title":"Overview of main functions","text":"Suppose interest knowing effect sex, gestational age birth weight height SDS age 2 years. analysis subject level. Let us first extract subject-level data variables vary subjects . also need outcome variable. take broken stick estimates nine line solution append subject level data. names columns bs correspond knot values. effect subject’s sex, gestational age birth weight height SDS age 2 years (denoted variable named 2) can estimated Note analysis shows substantial effect birth weight. course, might birth weight directly related height age 2 years. Alternatively, relation mediated birth length. following model adds birth length (variable named 0) model: effect birth length length age 2 strong. separate effect birth weight anymore, analysis suggests relation birth weight length age 2 can explained mutual associations birth length.","code":"subj <- data %>%   select(id, sex, ga, bw) %>%    group_by(id) %>%    slice(1) head(subj, 3) ## # A tibble: 3 × 4 ## # Groups:   id [3] ##      id sex       ga    bw ##   <dbl> <chr>  <dbl> <dbl> ## 1 10001 female    40  3960 ## 2 10002 male      38  3210 ## 3 10003 female    40  4170 bs <- predict(fit9, x = \"knots\", shape = \"wide\", include_data = FALSE) data <- bind_cols(subj, select(bs, -id)) head(data, 3) ## # A tibble: 3 × 15 ## # Groups:   id [3] ##      id sex       ga    bw    `0` `0.0833` `0.1667` `0.25`  `0.5` `0.75`    `1` ##   <dbl> <chr>  <dbl> <dbl>  <dbl>    <dbl>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl> ## 1 10001 female    40  3960  0.569    0.865    0.735  0.657  0.232 -0.172  0.118 ## 2 10002 male      38  3210 -0.184   -0.329   -0.252 -0.319 -0.218 -0.281 -0.344 ## 3 10003 female    40  4170  1.17     2.11     1.97   2.04   2.03   1.81   1.32  ## # … with 4 more variables: `1.25` <dbl>, `1.5` <dbl>, `2` <dbl>, `2.6776` <dbl> ## # ℹ Use `colnames()` to see all variable names fit1_lm <- lm(`2` ~ sex + ga + I(bw / 1000), data = data) summary(fit1_lm) ##  ## Call: ## lm(formula = `2` ~ sex + ga + I(bw/1000), data = data) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -2.8965 -0.4525  0.0817  0.6424  2.0369  ##  ## Coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)   1.0361     1.4705    0.70  0.48187     ## sexmale       0.0109     0.1285    0.08  0.93249     ## ga           -0.0700     0.0433   -1.62  0.10752     ## I(bw/1000)    0.5343     0.1420    3.76  0.00022 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.879 on 196 degrees of freedom ## Multiple R-squared:  0.0757, Adjusted R-squared:  0.0616  ## F-statistic: 5.35 on 3 and 196 DF,  p-value: 0.00145 fit2_lm <- lm(`2` ~ sex + ga + I(bw / 1000) + `0`, data = data) summary(fit2_lm) ##  ## Call: ## lm(formula = `2` ~ sex + ga + I(bw/1000) + `0`, data = data) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -2.9375 -0.5326  0.0426  0.6292  1.8792  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)    ## (Intercept)  3.226719   1.662005    1.94   0.0536 .  ## sexmale     -0.000703   0.126542   -0.01   0.9956    ## ga          -0.089472   0.043247   -2.07   0.0399 *  ## I(bw/1000)   0.143924   0.201777    0.71   0.4765    ## `0`          0.245522   0.091492    2.68   0.0079 ** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.865 on 195 degrees of freedom ## Multiple R-squared:  0.109,  Adjusted R-squared:  0.0904  ## F-statistic: 5.94 on 4 and 195 DF,  p-value: 0.000156"},{"path":"https://growthcharts.org/brokenstick/articles/mainfunctions.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Overview of main functions","text":"vignette illustrated use brokenstick(), plot() predict() functions. vignettes highlight various capabilities package.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"abstract","dir":"Articles > Manual","previous_headings":"","what":"Abstract","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Many longitudinal studies collect data irregular observation times, often requiring application linear mixed models time-varying outcomes. paper presents alternative splits quantitative analysis two steps. first step converts irregularly observed data set repeated measures broken stick model. second step estimates parameters scientific interest repeated measurements subject level. broken stick model approximates subject’s trajectory series connected straight lines. breakpoints, specified user, divide time axis consecutive intervals common subjects. Specification model requires just three variables: time, measurement subject. model special case linear mixed model, time linear \\(B\\)-spline subject grouping factor. main assumptions : subjects exchangeable, trajectories consecutive breakpoints straight, random effects follow multivariate normal distribution, unobserved data missing random. R package brokenstick v2.2.0 offers tools calculate, predict, impute visualise broken stick estimates. package supports two optimisation methods, including options constrain variance-covariance matrix random effects. demonstrate six applications model: detection critical periods, estimation time--time correlations, profile analysis, curve interpolation, multiple imputation personalised prediction future outcomes curve matching.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"introduction","dir":"Articles > Manual","previous_headings":"","what":"Introduction","title":"Broken Stick Model for Irregular Longitudinal Data","text":"longitudinal studies plan data collection occur fixed set time points. practice, realised times can differ - sometimes substantially - scheduled times. may many reasons differences. example, planned visit weekend holiday, subject didn’t show , measurement device order, investigator got ill. Varying observation times may also result combining data multiple studies, collected according design. Timing variation can substantial observational studies, especially survey lacks pre-specified schedule. Longitudinal data timing differences subjects said irregular. Irregular observation times present significant challenges quantitative analysis. example, isn’t easy calculate time--time correlation matrix data spread thinly time. might also complex predict future past data subject times differ. Observation times may also relate process interest. example, severe patients get frequent measurements; unmotivated cohort members respond rarely, . Conventional methods like MANOVA, regression cluster analysis break observation times differ drop-selective. irregular observation times occur science, universal principled approach resolve problem. One straightforward fix take dates data available (e.g., dates stocks traded), thus ignoring times markets closed. One may also create bins time intervals around planned times, thereby ignoring within-period differences. Another ad-hoc method predicts value scheduled time neighbouring data, e.g., linear interpolation smoothing, typically reducing variability data. quick fixes create data sets timing problem seems “gone away”, may tempt analyst ignore potential effects data patch-substantive conclusions. convenient straightforward, thoughtless application fixes introduces significant spurious relations time, especially spacing observations highly irregular (Rehfeld et al. 2011). Binning can lead “surprisingly large” biases (Towers 2014). timing variation related outcome interest, methods may result biased estimates exaggerated claims (Pullenayegum Lim 2016). linear mixed model longitudinal data (Laird Ware 1982; Fitzmaurice, Laird, Ware 2011) standard analysing irregular data. model represents subject’s observed curve parametric function time. parameter estimates function specific subject modelled random effects. linear mixed model beneficial irregular data. borrows strength across different realisations process, summarising trajectory small number parameters vary subjects. analyst can break distribution random effects function individual characteristics. linear mixed model attractive number measurements differs individuals measurements taken different times. paper explores use broken stick model transform irregularly observed data repeated measures. broken stick model describes curve series connected straight lines. model long history known many names, amongst others, segmented straight lines (Bellman Roth 1969), piecewise regression (Toms Lesperance 2003), structural change models (Bai Perron 2003), broken line smoothing (Koutsoyiannis 2000) segmented regression (Lerman 1980). term broken stick goes back least MacArthur (1957), used analogy indicate abundance species. literature broken stick model concentrates problem finding optimal times lines connect. Instead, present paper focus problem summarising irregular individual trajectories estimates made pre-specified time grid. time grid identical individuals, needs equidistant. model formulation special case linear mixed model, time modelled set random effects coded linear \\(B\\)-spline subjects grouping factor. output transformation set repeated measures, every subject obtains score every time point. Many R packages offer tools interpolation. splines package ( Core Team 2020) akima package (Akima et al. 2021) contains classic interpolation methods one- two-dimensional smoothing. contributed packages concentrate time series spatial interpolation. See Li Heap (2014) Lepot, Aubin, Clemens (2017) overviews different concepts methodologies. interpolation techniques rely neighbouring information, time, space . broken stick model addresses problem many independent replications provide short irregular multivariate time series, say 5-30 time points. scientific interest dynamically predict update future observations. model applies linear mixed model increase stability series borrowing information across replicates. satisfactory solutions problem, brokenstick package intends fill gap. Substantive researchers often favour repeated measures use linear mixed models simplicity. example, can easily fit subject-level model predict future outcomes conditional earlier data repeated measures data. simple regression models may less efficient modelling complete data (Diggle et al. 2002, sec. 6.1), increased insight may valuable increased precision. broken stick model requires specification sensible set time points measurements ideally taken. subject, model predicts imputes hypothetical observations times, substantive analysis applies repeated measures instead irregular data. strategy akin Diggle’s multi-stage model-fitting approach (Diggle 1988). envisioned two-step analytic process aims provide best worlds. applications broken stick model : approximate individual trajectories series connected straight lines; align irregularly observed curves joint age grid; impute realisations individual trajectories; estimate time--time correlation matrix; predict future observations. original motivation developing broken stick model facilitate statistical analysis testing critical ages onset childhood obesity (de Kroon et al. 2010), extensions multiple imputation (van Buuren 2018b). good support R fitting child growth data. mention related approaches. Methods estimating growth references parametric models gamlss() gamlss (Stasinopoulos Rigby 2007) Bayesian incarnation bamlss() bamlss (Umlauf et al. 2021). Nonparametric alternatives estimate quantiles directly rq() quantreg (Koenker et al. 2018) expectreg.ls() expectreg (Otto-Sobotka et al. 2021). Methods modelling smoothing growth curves fit trajectories per child include smooth.basisPar() fda (Ramsay, Graves, Hooker 2021), gam() mgcv (Wood 2011), loess() smooth.spline() base stats ( Core Team 2020). Models smooth borrowing strength across children face.sparse() face (Xiao et al. 2021), lmer() lme4 (Bates et al. 2015), sitar() sitar (T. Cole 2021). broken stick model fits latter tradition, features intuitive parametrisation individual growth curve series connected straight lines. See Anderson et al. (2019) overview comparison methods. present paper highlights various computational tools brokenstick v2.2.0 package. package contains tools fit broken stick model data, export fitted model’s parameters, create imputed values model, predict broken stick estimates new data. Also, text illustrates tool helps solve various analytic problems.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"illustration-of-broken-stick-model","dir":"Articles > Manual","previous_headings":"","what":"Illustration of broken stick model","title":"Broken Stick Model for Irregular Longitudinal Data","text":"first step, let us study variation age measurement 200 children SMOCC study (Herngreen et al. 1994). Lokku et al. (2020) suggest abacus plot visualise variation. Figure 1: Abacus plot observation times first 20 children SMOCC data. Data collection done 10 waves. dot represents age observation made. variability timing children rises age. blue points Figure 1 indicate observation times. Generally, blue points close scheduled ages (indicated vertical lines), especially first half-year. Observation times vary older children. Several children one missing visits (e.g., 10002, 10008, 10024). children (10012, 10015) fairly close visits. Child 10028 dropped month 9. Let us fit two models, two nine lines, respectively, body length’s standard deviation score (SDS). Figure 2: Data fitted curves three children (blue = observed data, red = fitted curves). broken stick model two lines (top) gives crude approximation data. model nine lines (bottom) follows data quite closely. Figure 2 shows individual trajectories three children. blue points coincide observed data, whereas red curves calculated according broken stick model. two fitted models. simpler model (top) uses just two line segments. first line starts birth ends age exactly 1 year. second line spans period 1 2 years. Note two lines connect breakpoint, age 1 year. red curves two-line model crude approximation data. can create better model setting breakpoints equal scheduled ages. Since 10 scheduled ages, construct nine straight lines. contrast two-line model, nine-line broken stick model sensitive small bumps observed trajectory closely fits empirical data. residual variance nine-line model low (0.059), proportion explained variance SDS high (0.98). observation times data differ children, broken stick curves use identical time points across subjects. idea now can add broken stick estimates child-level data long--wide conversion analyse supplemented columns repeated measures. repeated measures analysis usually simpler equivalent temporally misaligned data. example, easy calculate mean profiles arbitrary groups, estimate time--time covariance matrix, build predictive models child level. See Hand Taylor (1987) lucid overview linear techniques repeated measures.","code":"fit2 <- brokenstick(hgt_z ~ age | id, smocc_200, seed = 1,                     knots = 0:2) fit9 <- brokenstick(hgt_z ~ age | id, smocc_200, seed = 1,                     knots = round(c(0:3, 6, 9, 12, 15, 18, 24)/12, 4))"},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"notation","dir":"Articles > Manual","previous_headings":"3 Methodology","what":"Notation","title":"Broken Stick Model for Irregular Longitudinal Data","text":"adopt notation Fitzmaurice, Laird, Ware (2011). Let \\(Y_{ij}\\) denote response variable \\(^{\\rm th}\\) subject \\(j^{\\rm th}\\) measurement occasion time \\(t_{ij}\\). Data collected sample \\(N\\) persons \\(=1,\\dots,N\\). Let repeated measurements \\(^{\\rm th}\\) subject grouped \\[ Y_i = \\left( \\begin{array} {l} Y_{i1} \\\\ Y_{i2} \\\\ \\vdots \\\\ Y_{in_i} \\end{array} \\right), \\quad = 1, \\dots, N. \\] measures observed common set occasions, drop index \\(\\) \\(t_{ij}\\) since \\(t_{ij} = t_j\\) \\(= 1, \\dots, N\\). focus case \\(t_{ij}\\) varies \\(\\). addition, let use define \\(n_i \\times p\\) matrices \\[ X_i = \\left( \\begin{array} {llll} X_{i11} & X_{i12} & \\cdots & X_{i1p} \\\\ X_{i21} & X_{i22} & \\cdots & X_{i2p} \\\\ \\vdots  & \\vdots  & \\ddots & \\vdots  \\\\ X_{in_i1} & X_{in_i2} & \\cdots & X_{in_ip} \\end{array} \\right), \\quad = 1, \\dots, N, \\] rows \\(X_i\\) contain \\(p\\) covariates associated responses \\(n_i\\) measurement occasions. columns may time-varying covariates. certain covariate fixed time (e.g., sex, treatment, education), values within corresponding column \\(X_i\\) identical.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"broken-stick-model","dir":"Articles > Manual","previous_headings":"3 Methodology","what":"Broken stick model","title":"Broken Stick Model for Irregular Longitudinal Data","text":"broken stick model avoids modeling observation times \\(t_{ij}\\) directly representing \\(t_{ij}\\) relative position within time interval. example, suppose \\(t_{ij} = 0.6\\) years time interval given 0.5-1.0 years. position relative left break age \\(x_{\\rm left} = (1.0-0.6)/(1.0-0.5) = 0.8\\), whereas relative right break age \\(x_{\\rm right} = (0.6-0.5)/(1.0-0.5) = 0.2\\). order fit broken stick model, need replace time point \\(t_{ij} = 0.6\\) two values: 0.8 (break age 0.5), 0.2 (break age 1.0). Note values add 1. Coding time way simplifies modeling continuous time set discrete break ages. specifically, let \\(t_{ij}\\) coded second-order (linear) \\(B\\)-spline using \\(k\\) internal knots \\(\\kappa\\) placed \\(k+1\\) ordered ages \\[ \\kappa_0 = \\kappa_1 < \\dots < \\kappa_k < \\kappa_{k+1} \\] internal knots \\(\\kappa_1, \\dots, \\kappa_k\\) correspond set ages obtain broken stick estimates, specified user. left boundary knot \\(\\kappa_0 = \\kappa_1\\) left-anchored minimum time \\(\\min(t_{ij})\\) data. point defines starting event participant, birth study enrolment. right hand boundary knot \\(\\kappa_{k+1} \\geq \\max(t_{ij})\\). second-order \\(B\\)-spline (de Boor 1978, 32), \\[ H_s(t) = \\left\\{ \\begin{array} {l@{\\quad,\\quad}l} (t-\\kappa_{s-1})/(\\kappa_s - \\kappa_{s-1}) & \\kappa_{s-1} < t \\leq \\kappa_s,\\\\ (\\kappa_{s+1}-t)/(\\kappa_{s+1} - \\kappa_s) & \\kappa_s \\leq t < \\kappa_{s+1},\\\\ 0 & {\\rm otherwise.} \\end{array} \\right. \\] applied \\(t_{ij}\\) obtain \\((k+1)\\) transformed variables \\(x_{} = t_{ij}\\) \\(s = 1,\\dots,k+1\\). variables can conveniently grouped \\(n_i \\times (k+1)\\) matrix covariates \\(X_i = (x_{i1}, \\dots, x_{ik}, x_{(k+1)})\\). row \\(X_i\\) one two non-zero elements, sum 1. Using \\(X_i\\), broken stick model special case (\\(Z_i = X_i\\)) two-stage random-effects model (Laird Ware 1982) \\[ Y_i = X_i\\beta + X_ib_i + \\epsilon_i \\] \\(k+1\\) column vector \\(\\beta\\) contains \\(k+1\\) fixed effect coefficients common persons, \\(k+1\\) column vector \\(b_i\\) accommodates \\(k+1\\) subject-specific random parameters, \\(n_i\\) column vector \\(\\epsilon_i\\) holds subject-specific residuals. order complete model specification, assume residuals identically independently distributed \\(\\epsilon_i \\sim N(0,\\sigma^2 (n_i))\\), \\(\\sigma^2\\) common variance parameter, \\((n_i)\\) identity matrix order \\(n_i\\). Thus, equation represents population parameters (fixed effects), individual effects (random effects), amount within-person dispersion persons. Section 4.2 also considers heterogeneous model allows \\(\\sigma_i^2\\) vary subjects. summary, given knot specification choice response scale, parameters broken stick model : \\(\\beta\\), vector \\(k + 1\\) fixed parameters; \\(\\Omega\\), \\((k+1) \\times (k+1)\\) covariance matrix random effects; \\(\\sigma^2\\), within-person error variance. total number parameters solution \\(k\\) internal knots thus equal \\((k^2 + 5k + 6)/2\\). example, model \\(k = 3\\) knots (.e., two connected lines) 15 parameters, model \\(k = 4\\) 21 parameters, model \\(k = 10\\) break ages 78 parameters. heterogeneous model one additional parameter measures variation \\(\\sigma_i^2\\).","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"model-assumptions","dir":"Articles > Manual","previous_headings":"3 Methodology","what":"Model assumptions","title":"Broken Stick Model for Irregular Longitudinal Data","text":"person level, assume \\(b_i \\sim N(0, \\Omega)\\), .e., random coefficients subjects multivariate normal distribution zero mean \\((k+1) \\times (k+1)\\) covariance matrix \\(\\Omega\\). base model allows elements \\(\\Omega\\) vary freely. time-dependent data, constrained versions \\(\\Omega\\) also interest (Fitzmaurice, Laird, Ware 2011, ch. 7). Section 4.2 highlights two extensions. also assume covariance \\(b_i\\) \\(\\epsilon_i\\) zero. simplicity, paper restricted case \\(X_i\\) includes time, covariates. broken stick model builds upon three main modeling assumptions: trajectory break ages follows straight line. assumption may fail processes convex concave time. example, human height growth centimeters growth concave time, setting breakpoints far apart introduces systematic negative bias. Modeling height SDS instead raw height prevent bias. broken stick estimates follow joint multivariate normal distribution. assumption may fail skewed measurements, beneficial transform outcomes distribution closer normal. data missing random (MAR) given outcomes subjects observation times. assumption restrictive sense missingness may depend observed outcomes, covariates time. time, assumption liberal sense missingness may depend future outcomes. MAR-future assumption unusual literature drop-observation time models, sensible strategy creating imputations preserve relations time, especially intermittent missing data. course, subsequent substantive analysis imputed data needs aware causal direction time.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"interpretation","dir":"Articles > Manual","previous_headings":"3 Methodology","what":"Interpretation","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Given model estimates person data, can calculate random effect \\(b_i\\). broken stick parameter \\(\\gamma_{} = \\beta_s + b_{}\\) subject-specific mean \\(Y_i\\) time \\(\\kappa_s\\), \\(s = 1,\\dots, k + 1\\). set \\(\\gamma_{}\\) parameters describes mean response profile subject \\(\\) \\(k\\) lines connect \\(k + 1\\) coordinates \\((\\kappa_s, \\gamma_{})\\). broken stick parameter likely value outcome \\(Y_i\\) subject \\(\\) time \\(\\kappa_s\\). parameter centre posterior predictive distribution normal \\(Y_i\\). two-sided \\(100(1-\\alpha)\\%\\) prediction interval true, though often unobserved, value \\(Y_{,\\kappa_s}\\) equal \\[ [Y_{,\\kappa_s}^{\\rm lo}, Y_{,\\kappa_s}^{\\rm hi}] = \\gamma_{} \\pm t_{(1-\\alpha/2;N-1)}\\sigma, \\] \\(t_{(1-\\alpha/2;N-1)}\\) \\(100(1-\\alpha/2)\\) percentile Student’s \\(t\\)-distribution \\(N - 1\\) degrees freedom. example, 50% prediction interval \\(\\gamma_{} \\pm 0.68\\sigma\\) contain 50% true values. normal \\(Y_i\\), length 50% prediction interval equivalent interquartile range (IQR). residual variation \\(\\sigma^2\\) small (say \\(\\sigma^2 < 0.1\\)), IQR 0.22, half true values within 0.22 SD \\(\\gamma_{}\\), small difference. large \\(\\sigma^2\\) (e.g., \\(\\sigma^2 > 0.2\\)), \\(\\gamma_{}\\) vector smoothed representation \\(Y_{}\\). smoothness amplifies low-frequency features trajectories, also introduce biases subsequent analysis suppressing high-frequency variation. case, analyst needs check whether reduction variation affect parameters substantive interest. may restore high-frequency variation adding random draws residual distribution \\(N(0, \\sigma^2)\\). , small step multiple imputation, well-developed methodology drawing valid inferences incomplete data (Rubin 1987; van Buuren 2018b). \\(n_i >> k\\) broken stick model provides parsimonious representation measurements. Reversely, \\(n_i << k\\) model infers plausible values subject \\(\\) building strength across persons. broken stick model converts \\(n_i\\) irregularly observed measurements new set \\(k\\) values \\(\\gamma_{}\\) common ages \\(\\kappa_1, ..., \\kappa_k\\), \\(s = 1,\\dots, k\\). Since row \\(X_i\\) sums unity, broken stick model global intercept. linear \\(B\\)-spline coding effectively replaces global random intercept term \\(k + 1\\) local intercepts, one break age. local intercept summarizes information available adjacent left right age intervals ignores information beyond two adjacent knots. broken stick estimates thus primarily local. Outcome data observed outside two adjacent age intervals influence broken stick estimates subject-level part model, particular \\(\\Omega\\).","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"main-function","dir":"Articles > Manual","previous_headings":"4 Estimation","what":"Main function","title":"Broken Stick Model for Irregular Longitudinal Data","text":"brokenstick() function estimates parameters broken stick model. user needs specify outcome, predictor grouping variable, well location knots predictor variable. call produces object class brokenstick: object contains model setting, data results. column names \\(X\\) consist name time variable knot values appended. Thus, age_0 birth length age_1 length age 1y. find estimates fixed effects \\(\\beta\\) means, residual variance \\(\\sigma^2\\) mean resid variance-covariance matrix random effects \\(\\Omega\\) get_omega(fit). calculate broken stick estimates knot locations wide matrix predict() function follows: specification x = \"knots\" uses special keyword \"knots\" set predictor values equal knot locations used fit model. argument shape = \"wide\" returns predicted values wide matrix (one row per group, one column per predictor value). result now individual trajectory summarised six estimates.","code":"fit <- brokenstick(hgt_z ~ age | id, data = smocc_200,                    knots = c(0, 0.5, 1, 2), seed = 12321) summary(fit) ## Class        brokenstick (kr) ## Variables    hgt_z (outcome), age (predictor), id (group) ## Data         1942 (n), 36 (nmis), 200 (groups) ## Parameters   22 (total), 5 (fixed), 5 (variance), 10 (covariance), 2 (error) ## Knots        0 0.5 1 2 2.68  ## Means        -0.094 0.093 -0.014 0.084 0.268  ## Residuals    0.106 0.129 0.146 0.169 0.361 (min, P25, P50, P75, max) ## Mean resid   0.156  ## R-squared    0.893  ##  ## Variance-covariance matrix ##            age_0 age_0.5 age_1 age_2 age_2.6776 ## age_0      1.409                                ## age_0.5    0.718   0.905                        ## age_1      0.521   0.755 0.765                  ## age_2      0.395   0.721 0.783 0.941            ## age_2.6776  0.44   0.017 0.172 0.018       3.42 bse <- predict(fit, x = \"knots\", shape = \"wide\") dim(bse) ## [1] 200   6 head(bse, 3) ## # A tibble: 3 × 6 ##      id    `0`  `0.5`     `1`     `2` `2.6776` ##   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>    <dbl> ## 1 10001  0.789  0.247  0.0256  0.0341    0.656 ## 2 10002 -0.267 -0.228 -0.421  -0.514     0.314 ## 3 10003  1.67   2.00   1.28    1.10      0.162"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"estimation-steps-explained","dir":"Articles > Manual","previous_headings":"4 Estimation","what":"Estimation steps explained","title":"Broken Stick Model for Irregular Longitudinal Data","text":"may break estimation process two main steps. first step calculates matrix \\(B\\)-splines time variable age core splines::bs() ( Core Team 2020) function: numerical example shows bs() function transforms age variable five columns, \\(B\\)-spline basis, names like age_0 age_0.5. age coincides one (e.g., top row), corresponding column receives 1. cases, age distributes two adjacent columns. make things fit, need additional column (age_2.68) last position, right boundary knot. also left boundary knot, conveniently set equal first breakpoint, marking start time. Setting degree = 1 specifies \\(B\\)-spline gives broken stick model name characteristic shape. second step specify model estimate parameters. two methods : \"kr\" \"lmer\". Method \"lmer\" relies popular function lme4::lmer() (Bates et al. 2015) fit linear mixed normal model. formula removes intercept specifies knot random effect child id grouping factor. control argument suppresses warning Model failed converge max|grad| = 0.0360913. warnings occur often model many random effects. warnings may also thrown child data outliers (example pre-terms). found broken estimates generally look sound reasonable despite warnings. Note however experience derives primarily child growth data, guarantee apparent robustness hold types data. Warnings lmer() become frequent higher number knots, smaller samples data observations made irregular time points. Object mod_lmer class lmerMod may use standard plot(), predict() summary methods offered lme4 package. Converting result broken stick estimates requires summing fixed random effects. calculation time lme4::lmer() rapidly increases number random effects. ten random effects (knots) takes significant time, beyond 15 knots generally impossible fit. example, using dataset 33,000 records 2,600 individuals, Apple M1 Max takes 8 seconds (5 knots), 107 seconds (9 knots), 403 seconds (12 knots) 1172 seconds (15 knots). brokenstick package provides another alternative, Kasim-Raudenbush (KR) sampler (Kasim Raudenbush 1998). method simulates draws posterior distributions parameters two-level normal model heterogeneous within-subject variances. speed Kasim-Raudenbush sampler almost insensitive number random effects depends primarily total number iterations somewhat sample size. Execution KR method problem takes 15 seconds (5 knots), 17 seconds (9 knots), 19 seconds (12 knots) 20 seconds (15 knots). method available function kr() brokenstick package default since version 2.0.0. control_kr() function tweaks estimation options: call control_kr() produces list settings sampler according conventions coda package (Plummer et al. 2006). defaults control_kr() reasonable across wide range cases. list component mod_kr$mod contains various objects class mcmc sampling history detailed results. example, inspect fixed effect estimates Also, may obtain trace plots densities. example try plot(mod_kr$mod$beta). obtain results method \"lmer\" argument shape = \"wide\" specifies form return value. broken stick estimates kr lmer methods similar, identical. fact, substantial discrepancies may occur areas data sparse, example, right boundary knot. Apart faster complex models, KR-sampler opens interesting analytic options: relatively easy constrain fitted covariance random effects, \\(\\Omega\\), matrix simple structure. Informing sampler time-dependent structure random effect leads stabler estimates \\(\\Omega\\). package currently implements two correlations models. models express correlation \\(\\rho(t_1, t_2)\\) two Z -scores \\(Z_1\\) \\(Z_2\\) successive ages \\(t_1\\) \\(t_2\\) function ages. Argyle model (Argyle, Seheult, Wooff 2008) \\(\\rho(t_1, t_2) = \\exp(-\\lambda|T_1-T_2|)\\), \\(T_i = \\log(\\tau+t_i)\\) logarithmic rescaling time axis \\(\\rho=exp(-\\lambda)\\). Cole correlation model (T. J. Cole 1995) describes Fisher-transformed correlation function average \\((t_1+t_2)/2\\) difference \\((t_2-t_1)\\), including two multiplicative terms. Note models proposed context child growth, may fit less well types time-dependent data. Kasim-Raudenbush sampler fits slightly general linear-mixed model heterogeneous within-subject variances, .e., residual variance \\(\\sigma_i^2\\) per subject \\(\\) instead global residual \\(\\sigma^2\\). makes easier identify, study weight subjects based well fit model. third option simulate imputations extra step sampler. subject large \\(\\sigma_i^2\\), random effect estimates smooth representation data, leading inappropriate variance estimates estimates analysed “just data”. Section 11.3 van Buuren (2018b) pioneered solution constructs multiple trajectories adding proper amount residual noise random effect estimates. variance estimation proceeds according principles multiple imputation (Rubin 1987).","code":"library(\"splines\") data <- brokenstick::smocc_200 internal <- c(0, 0.5, 1, 2) X <- bs(data$age, knots = internal, Boundary.knots = c(0, 2.68),         degree = 1) colnames(X) <- paste(\"age\", c(internal, 2.68), sep = \"_\") data <- cbind(data[, c(\"id\", \"age\", \"hgt_z\")], X) head(data) ##      id    age  hgt_z age_0 age_0.5  age_1 age_2 age_2.68 ## 1 10001 0.0000  0.575 1.000   0.000 0.0000     0        0 ## 2 10001 0.0821  0.888 0.836   0.164 0.0000     0        0 ## 3 10001 0.1588  0.797 0.682   0.318 0.0000     0        0 ## 4 10001 0.2546  0.661 0.491   0.509 0.0000     0        0 ## 5 10001 0.5038  0.290 0.000   0.992 0.0076     0        0 ## 6 10001 0.7529 -0.398 0.000   0.494 0.5058     0        0 ctl_lmer <- lme4::lmerControl(   check.conv.grad = lme4::.makeCC(\"warning\", tol = 0.04)) f <- hgt_z ~ 0 + age_0 + age_0.5 + age_1 + age_2 + age_2.68 +   (0 + age_0 + age_0.5 + age_1 + age_2 + age_2.68 | id) mod_lmer <- lme4::lmer(f, data, control = ctl_lmer) class(mod_lmer) ## [1] \"lmerMod\" ## attr(,\"package\") ## [1] \"lme4\" bse_lmer <- t(t(lme4::ranef(mod_lmer)$id) + lme4::fixef(mod_lmer)) head(round(bse_lmer, 3), 3) ##        age_0 age_0.5 age_1  age_2 age_2.68 ## 10001  0.778   0.272 -0.01  0.076    0.095 ## 10002 -0.278  -0.206 -0.46 -0.477   -0.223 ## 10003  1.681   1.969  1.28  1.115   -0.256 ctl_kr <- control_kr() mod_kr <- kr(y = data$hgt_z, x = X, g = data$id, control = ctl_kr) library(\"coda\") summary(mod_kr$mod$beta) ##  ## Iterations = 101:300 ## Thinning interval = 1  ## Number of chains = 1  ## Sample size per chain = 200  ##  ## 1. Empirical mean and standard deviation for each variable, ##    plus standard error of the mean: ##  ##             Mean     SD Naive SE Time-series SE ## age_0    -0.0966 0.0875  0.00619        0.01001 ## age_0.5   0.0897 0.0625  0.00442        0.00442 ## age_1    -0.0196 0.0626  0.00443        0.00526 ## age_2     0.0768 0.0749  0.00530        0.00715 ## age_2.68  0.2087 0.4594  0.03249        0.15269 ##  ## 2. Quantiles for each variable: ##  ##             2.5%     25%     50%     75%  97.5% ## age_0    -0.2623 -0.1582 -0.0897 -0.0354 0.0600 ## age_0.5  -0.0188  0.0454  0.0943  0.1320 0.2139 ## age_1    -0.1502 -0.0633 -0.0183  0.0223 0.0922 ## age_2    -0.0623  0.0257  0.0806  0.1263 0.2168 ## age_2.68 -0.6762 -0.0168  0.1983  0.4737 1.2039 fit_lmer <- brokenstick(hgt_z ~ age | id, data = smocc_200,                         knots = c(0, 0.5, 1, 2),                         method = \"lmer\", control = ctl_lmer) head(predict(fit_lmer, x = \"knots\", shape = \"wide\"), 3) ## # A tibble: 3 × 6 ##      id    `0`  `0.5`     `1`     `2` `2.6776` ##   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>    <dbl> ## 1 10001  0.778  0.272 -0.0101  0.0763   0.0939 ## 2 10002 -0.278 -0.206 -0.460  -0.477   -0.222  ## 3 10003  1.68   1.97   1.28    1.12    -0.249"},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"overview","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Overview","title":"Broken Stick Model for Irregular Longitudinal Data","text":"brokenstick package contains functions fit, predict plot data. main functions brokenstick package : following functions user-oriented helpers: following functions implement calculations: package exports S3 methods class brokenstick following generic functions coef(), fitted(), model.frame(), model.matrix(), plot(), predict(), print(), residuals() summary(). object class brokenstick stores training data default. desired, specify brokenstick(..., light = TRUE) create small object just parameter estimates. course, extract original data light object. However, can still use calculate brokenstick estimates new cases using predict(object, newdata = ...).","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"data-preparation","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Data preparation","title":"Broken Stick Model for Irregular Longitudinal Data","text":"can fit model, data need shape. brokenstick() function takes tidy data long-form. Every row data corresponds one visit. Two columns identify visit: subject variable time variable. Thus, subject one three visits subject two five visits, combined data eight records. section uses built-smocc_200 data, containing heights 200 children measured ten visits two years (Herngreen et al. 1994). subject variable id time variable age.","code":"library(\"brokenstick\") head(smocc_200, 3) ## # A tibble: 3 × 7 ##      id    age sex       ga    bw   hgt hgt_z ##   <dbl>  <dbl> <chr>  <dbl> <dbl> <dbl> <dbl> ## 1 10001 0      female    40  3960  52   0.575 ## 2 10001 0.0821 female    40  3960  55.6 0.888 ## 3 10001 0.159  female    40  3960  58.2 0.797"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"transformation-to-standard-deviation-scores-sds","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Transformation to Standard Deviation Scores (SDS)","title":"Broken Stick Model for Irregular Longitudinal Data","text":"broken stick model can fit observations either raw scale \\(Y\\) (cm, kg, ) \\(Z\\)-score. normal distribution mean \\(\\mu\\) standard deviation \\(\\sigma\\) \\(Z\\)-score data value \\(Y\\) defined \\(Z = (Y - \\mu)/\\sigma\\). statistics, customary estimate \\(\\mu\\) \\(\\sigma\\) data, can also take values external reference table. example, heights boys age \\(t\\) follow approximate normal distribution age-specific mean \\(\\mu_t\\) age-specific standard deviation \\(\\sigma_t\\). reference table consists estimates \\(\\mu_t\\) \\(\\sigma_t\\) different ages \\(t\\). calculate standard deviation score (SDS) boy height \\(Y\\) age \\(t\\) \\(Z = (Y - \\mu_t)/\\sigma_t\\), \\(\\mu_t\\) \\(\\sigma_t\\) taken reference table. can compare \\(Z\\)-score directly reference population, compare two measurements taken different ages age effect removed. SDS calculation standard methodology child growth, available many distributions. See Stasinopoulos Rigby (2007) details. Analysis \\(Z\\)-scores preferable raw scale several reasons: growth curve follows centile reference distribution translates horizontal line \\(Z\\)-score scale, simplifies modeling; Observations \\(Z\\)-score scale closer multivariate normality; Analysis \\(Z\\)-scores removes overpowering impact age sex growth, becomes easier highlight interesting variation within children; Fitting \\(Z\\)-score data leads fewer convergence issues. area child growth, easy convert raw measurements \\(Z\\)-score scale, fit model, convert back raw scale afterwards, desired. several R packages assist calculations: AGD (van Buuren 2018a), anthro (Schumacher, Borghi, Polonsky 2020), childsds (Vogel 2020), growthstandards (Hafen 2021), nlreferences (van Buuren 2021b) zscorer (Myatt Guevarra 2019). smocc_200 data contains height measurement original scale cm (hgt) \\(Z\\)-score scale (hgt_z) relative height references Fourth Dutch Growth study (Fredriks et al. 2000). illustration, let us calculate check height SDS using AGD package. Figure 3: Distribution height SDS 200 SMOCC children aged 0-2 years relative Dutch 1997 length references. distribution closely follows normal distribution. outliers left tail genuine observations children born pre-term. Figure 3 shows , expected, empirical Z-score distribution close standard normal. extremely low heights correspond pre-term born infants. Section 5.4 concentrates modelling hgt_z. Function z2y() applies inverse transformation \\(Z\\)-scores original scale. following snippet converts hgt_z cm scale. used Dutch 1997 height references , similar transforms made using references. Many age- sex-conditional references exist field child growth. fields, references may rare uncommon. case, may achieve benefits \\(Z\\)-scale analysis applying broken stick model standardized residuals preliminary non-linear regression outcome time.","code":"library(\"AGD\") z <- with(smocc_200, y2z(y = hgt,                          x = age,                          sex = ifelse(sex == \"male\", \"M\", \"F\"),                          ref = nl4.hgt)) identical(z, smocc_200$hgt_z) ## [1] TRUE y <- with(smocc_200, AGD::z2y(z = hgt_z,                               x = age,                               sex = ifelse(sex == \"male\", \"M\", \"F\"),                               ref = nl4.hgt)) all.equal(y, smocc_200$hgt, tol = 0.0001) ## [1] TRUE"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"model-fitting","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Model fitting","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Figure 4: Detrended growth chart. Length growth 52 infants 0-2 years expressed Z-score scale. trajectory represents child. Trajectories almost flat representation. centile crossings occur near start trajectory. Figure 4 displays growth curves subset 52 children. \\(Z\\)-score transformation takes away major time trend, trajectories less flat. display allows us see extremely detailed assessment individual growth. Note measurements cluster around ten ages: birth, 1, 2, 3, 6, 9, 12, 15, 18 24 months. data collectors rigorously followed study design, variation timing inevitable weekends, holidays, sickness, events.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"fit-one-line","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.4 Model fitting","what":"Fit one line","title":"Broken Stick Model for Irregular Longitudinal Data","text":"start, let us fit simple straight line model age range 0y-2y. argument knots = c(0, 2) specifies wish model data age range 0y-2y straight line. Closer inspection get_knots(fit1) reveals actually another knot right boundary age 2.68 years. knot needs ensure data taken account, direct interest. can plot individual trajectories : Figure 5: Observed data (blue) fitted broken stick model (red) straight line birth two years. model picks overall trend, ignores systematic patterns around line. Figure 5 shows observed (blue) fitted (red) trajectories three selected children. side note, can actually plot model full age range data adding argument = \"\" plot() function (shown). Observe model captures overall age trend, fit data moderate.","code":"fit1 <- brokenstick(hgt_z ~ age | id, smocc_200, knots = c(0, 2)) get_knots(fit1) ## [1] 0.00 2.00 2.68 ids <- c(10001, 10005, 10022) plot(fit1, group = ids, xlab = \"Age (years)\", ylab = \"Length (SDS)\")"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"fit-two-lines","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.4 Model fitting","what":"Fit two lines","title":"Broken Stick Model for Irregular Longitudinal Data","text":"now extend two connected lines. first line start birth end age one year. second line spans period one two years. lines must connect age one year. estimate plot model follows: resulting plot already shown Figure 2 (top line). fit2 object holds parameter estimates model: printed output lists knots model 0, 1, 2 2.6776 years. left right boundaries located 0 2.6776, respectively, corresponding lowest highest ages data. means entry lists fixed effect estimates, interpret average SDS per time point. time--time variance-covariance matrix covers four random effects (3 visits + 1 end knot). two error parameters measure variability discrepancies model observed data. three parameters (fixed, random, residual variance) well interpretable fully record fitted broken stick model.","code":"fit2 <- brokenstick(hgt_z ~ age | id, smocc_200, knots = 0:2) plot(fit2, group = ids,      xlab = \"Age (years)\", ylab = \"Length (SDS)\") summary(fit2) ## Class        brokenstick (kr) ## Variables    hgt_z (outcome), age (predictor), id (group) ## Data         1942 (n), 36 (nmis), 200 (groups) ## Parameters   16 (total), 4 (fixed), 4 (variance), 6 (covariance), 2 (error) ## Knots        0 1 2 2.68  ## Means        -0.045 0.018 0.061 0.136  ## Residuals    0.125 0.15 0.17 0.2 0.379 (min, P25, P50, P75, max) ## Mean resid   0.182  ## R-squared    0.866  ##  ## Variance-covariance matrix ##            age_0 age_1 age_2 age_2.6776 ## age_0      1.226                        ## age_1      0.494 0.841                  ## age_2      0.454 0.794 0.874            ## age_2.6776 0.288  0.21 0.346      0.588"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"fit-nine-lines","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.4 Model fitting","what":"Fit nine lines","title":"Broken Stick Model for Irregular Longitudinal Data","text":"two-line model fit well. substantially refine model adding knot scheduled visit. code run model small residual variance 0.077, nine-line broken stick model fits observed data well. Figure 2 (bottom line) illustrates nine-line model follows data much better. training set includes subjects. Depending study goals, may wish improve model fit removing children data. example, might children observations available, children diseases, children trajectories unusual faulty. Use hist(fit9$sigma2j) spot outlier. course, removals may affect external generalisability.","code":"fit9 <- brokenstick(hgt_z ~ age | id, smocc_200, seed = 1,                     knots = round(c(0:3, 6, 9, 12, 15, 18, 24)/12, 4))"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"prediction","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Prediction","title":"Broken Stick Model for Irregular Longitudinal Data","text":"fitted model, may obtain predictions. subject(s) part training sample, also consist new children.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"all-subjects","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.5 Prediction","what":"All subjects","title":"Broken Stick Model for Irregular Longitudinal Data","text":"predict() function obtains predictions broken stick model. function flexible, allows prediction new subjects arbitrary ages variety output formats. simplest call produces vector length predictions observed ages. values represent compromise person’s measurement global mean. general, fewer less extreme data points person , closer compromise toward global mean. compromise called conditional mean posterior distribution, sum fixed random effects. can obtain predictions knot every person specifying x = \"knots\" argument, e.g., result p2 table 200 rows values 11 knots. values represent regularised version observed curve, .e., predicted value knot location. may request combination types predictions one call result long matrix 4142 rows. two special columns. Column .pred contains predicted values. Column .source identifies whether row comes training data (value “data”) corresponds one knots (value “added”). number records training data knots : dataset perfectly suited plot summarise data model predictions. Now suppose desire predict height SDS ages, e.g., 0.42, 1.33 4 years. can include_data = FALSE argument removes observed data result prevent conversion overly large inefficient wide matrix. Thus, considerable flexibility work times breakpoints. Remember though underlying model change. example, magically predict outside model age 4, values get NA.","code":"p1 <- predict(fit9, shape = \"vector\") head(p1) ## [1]  0.574  0.852  0.750  0.643  0.231 -0.168 p2 <- predict(fit9, x = \"knots\", shape = \"wide\") head(p2, 3) ## # A tibble: 3 × 12 ##      id    `0` 0.083…¹ 0.166…² `0.25`  `0.5` `0.75`    `1` `1.25`  `1.5` ##   <dbl>  <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> ## 1 10001  0.574   0.856   0.739  0.650  0.237 -0.172  0.121  0.163 -0.193 ## 2 10002 -0.189  -0.311  -0.260 -0.315 -0.229 -0.282 -0.336 -0.494 -0.490 ## 3 10003  1.17    2.10    1.98   2.02   2.04   1.81   1.31   1.14   0.880 ## # … with 2 more variables: `2` <dbl>, `2.6776` <dbl>, and abbreviated ## #   variable names ¹​`0.0833`, ²​`0.1667` ## # ℹ Use `colnames()` to see all variable names p3 <- predict(fit9, x = \"knots\") head(p3, 3) ##   .source    id    age    sex ga   bw  hgt hgt_z .pred ## 1    data 10001 0.0000 female 40 3960 52.0 0.575 0.574 ## 2    data 10001 0.0821 female 40 3960 55.6 0.888 0.852 ## 3    data 10001 0.1588 female 40 3960 58.2 0.797 0.750 table(p3$.source) ##  ## added  data  ##  2200  1942 head(predict(fit9, x = c(0.42, 1.33, 4), shape = \"wide\",              include_data = FALSE), 3) ## # A tibble: 3 × 4 ##      id `0.42`  `1.33`   `4` ##   <dbl>  <dbl>   <dbl> <dbl> ## 1 10001  0.369  0.0492    NA ## 2 10002 -0.257 -0.493     NA ## 3 10003  2.03   1.05      NA"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"single-subject","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.5 Prediction","what":"Single subject","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Obtaining predicted values selected subjects requires group argument (case 3 predict()). example returns vector predictions child 10001. Appending child’s data conveniently done removing shape argument. Also, can predict times using x argument, e.g. ages 0.42 1.33 (case 4 predict()). Now suppose subject 10001 additional height data ages 0.42 1.33 years, say -0.5 SDS -1 SDS, respectively. Can predict child’s trajectory new points included? answer yes: command (case 5 predict()) appends two new records data child 10001, recalculates trajectory using data child 10001. Note last two rows contain specified values columns age hgt_z, well predicted value .pred. predicted values different calculated case 4 two additional observations. desired user also fill values columns sex, ga, .","code":"predict(fit9, group = 10001, shape = \"vector\") ##  [1]  0.574  0.852  0.750  0.643  0.231 -0.168  0.121  0.151 -0.150 ## [10]  0.142 predict(fit9, x = c(0.42, 1.33), group = 10001, shape = \"vector\") ##  [1]  0.5744  0.8519  0.7503  0.6428  0.2308 -0.1682  0.1214  0.1505 ##  [9] -0.1500  0.1424  0.3693  0.0492 predict(fit9, x = c(0.42, 1.33), y = c(-0.5, -1), group = c(10001, 10001)) ##    .source    id    age    sex ga   bw  hgt  hgt_z    .pred ## 1     data 10001 0.0000 female 40 3960 52.0  0.575  0.61363 ## 2     data 10001 0.0821 female 40 3960 55.6  0.888  0.78191 ## 3     data 10001 0.1588 female 40 3960 58.2  0.797  0.67251 ## 4     data 10001 0.2546 female 40 3960 61.2  0.661  0.46165 ## 5     data 10001 0.5038 female 40 3960 67.2  0.290  0.00908 ## 6     data 10001 0.7529 female 40 3960 70.2 -0.398 -0.28561 ## 7     data 10001 1.0021 female 40 3960 75.7  0.202 -0.01344 ## 8     data 10001 1.1745 female 40 3960 78.5  0.268 -0.13440 ## 9     data 10001 1.5661 female 40 3960 81.8 -0.332 -0.39919 ## 10    data 10001 2.0096 female 40 3960 88.3  0.227  0.05064 ## 11   added 10001 0.4200   <NA> NA   NA   NA -0.500  0.15972 ## 12   added 10001 1.3300   <NA> NA   NA   NA -1.000 -0.27760"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"new-subject","dir":"Articles > Manual","previous_headings":"5 Functionality > 5.5 Prediction","what":"New subject","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Suppose measured two new children, Fred Alice. wish obtain predictions using model fit9. following snippet calculates predictions observed ages knot locations: can plot trajectories data Figure 6: Broken stick model prediction sparse data. Alice Fred observations (blue points). broken stick model borrows information children calculate fitted trajectories full age range (red points). Alice contributes two data points first half-year. model expects height SDS around -1 SD age two years. Using data 1.1 years, model predicts Fred’s growth curve remains around -2.0 SD Fred 1.5 years, increases around -1.8 SD. predicted trajectories extreme extrapolations, example illustrates possible make informed predictions using just handful data points. brokenstick:::EB() function implements empirical Bayes (EB) estimate (Skrondal Rabe‐Hesketh (2009), p. 683). procedure workhorse underlying predict() method.","code":"data <- data.frame(   age = c(0, 0.12, 0.32, 0.62, 1.1, 0.25, 0.46),   hgt_z = c(-1.2, -1.8, -1.7, -1.9, -2.1, -1.9, -1.5),   id = c(rep(\"Fred\", 5), rep(\"Alice\", 2))) p <- predict(fit9, newdata = data, x = \"knots\") plot(fit9, newdata = data, ylim = c(-2.5, 0),      xlab = \"Age (years)\", ylab = \"Length (SDS)\")"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"quality-of-prediction","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Quality of prediction","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Figure 7: Comparison predicted (vertical) observed (horizontal) height SDS scale (left) CM scale (right) SMOCC data. model almost perfectly recreates observed data. Figure 7 scatterplot observed versus predicted values provides visual representation accuracy prediction model height SDS cm scales. plots suggest excellent fit observed fitted data. percentage explained variance height SDS high: 98.1%. standard deviation residuals equal 0.077 SD, small value \\(Z\\)-scale. back-converted centimetres, scatterplot observed versus predicted values even little tighter. estimate proportion explained variance close perfection: 99.9%. standard deviation residuals 4 mm, size technical error measurement (TEM) duplicate measurements infants (Ismail et al. 2016, Table 2). --sample predictive behaviour comparable. randomly split data 100 times 2/3 training data 1/3 test data calculate proportion test data, obtain even slightly higher --sample values: 98.4% 99.9% 100 replications. model good can get. uncertainties associated transformation varying observation times repeated measures small. practical purposes, results linear mixed multilevel model repeated measures model likely .","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"knot-placement-strategies","dir":"Articles > Manual","previous_headings":"5 Functionality","what":"Knot placement strategies","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Fitting broken stick model requires specification knots. choice knots influences quality usefulness solution, exercise care setting appropriate knot locations. brokenstick() function uses set knots subjects. default, procedure places five internal knots (default argument k = 5) sets boundary knots equal range predictor variable. k argument quick way add k internal knots equidense quantiles time variable. example, specifying k = 1 puts knot 50th quantile (median), setting k = 3 puts knots 25th, 50th 75th quantiles, . convenient quick, option can result suboptimal knot placement adequate problem hand. general, best specify explicit values knots argument. cases, may also useful set boundary argument explicitly. action makes model specification less data-dependent can restrict range predictor enters model fitting. suggestions knot placement: Rule thumb: Limit number knots (average) number data points per subject; want predict specific times, specify knots time points. example, scientific interest includes prediction age 1 2 years, include time points knots; Setting knots scheduled visits sensible strategy obtaining predictions precisely scheduled times. Set equidistant knots analysis requires fixed time interval; Keep number knots low, speed simplicity. many (\\(\\geq 10\\)) knots can improve fit data. Still, also increase calculation time may result unstable solutions. problems require 10 knots, method = \"kr\" (default) faster method = \"lmer\". Use control_kr() improve stability setting correlation model; place knots sparsely filled areas data, e.g., -two visits. may result erratic joins; Define starting time common subjects (e.g., birth) set first breakpoint knots[1] equal left boundary knot boundary[1]. brokenstick() already cautions ensure ; Use get_knots() function extract knots fitted model; Set maximum value knots highest time scientific interest, still within data range. Set boundary knot boundary[2] larger value, e.g., equal maximum time variable. Broken stick estimates right boundary knot useful interpretation, exclude estimates plots ignore subsequent analyses; Set knots explicit values support generalisation time variable training data.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"critical-periods","dir":"Articles > Manual","previous_headings":"6 Applications","what":"Critical periods","title":"Broken Stick Model for Irregular Longitudinal Data","text":"following question motivated development broken stick model: ages children become overweight? Knowing answer question provides handles preventive interventions counter obesity. Dietz (1994) suggested existence three critical periods obesity adult age: prenatal period, period adiposity rebound (roughly around age 5-6 years), adolescence. Obesity formed periods likely increase obesity risk adult age complications. growth period, bounded ages \\(T_1\\) \\(T_2\\), critical adult overweight following criteria hold: (de Kroon et al. 2010) significant difference mean gain score \\(Z_2-Z_1\\) subjects without adult overweight; gain score \\(Z_2-Z_1\\) independent contribution \\(Z_2\\) prediction \\(Z_{\\rm adult}\\). matters \\(T_2\\) also got ; \\(Z_2\\) correlates highly \\(Z_{\\rm adult}\\), easier (.e., higher sensitivity specificity) identify children risk adult overweight. de Kroon et al. (2010) found age interval 2-6 years met criteria critical period. re-analysis tests requirements following age intervals: birth-4 months, 4 months-1 year, 1-2 years, 2-4 years, 4-6 years, 6-10 years 10-14 years. Hence, define following break ages: Figure 8: Scatterplot BMI SDS log(age + 0.2) Terneuzen cohort data. plot shows differential amounts clustering measurements around specified break ages. Clustering tighter ages (birth, 1y, 14y) others (4m, 2y, 24y). Terneuzen Birth Cohort (de Kroon et al. 2008) comprises 2604 children born around year 1980 Terneuzen, Netherlands. Figure 8 shows body mass index (BMI) standard deviation scores (SDS) age random subset 306 children. may easily recognise scheduled visits birth, 1y 14y, figure shows observations periods less structured. Compared analysis de Kroon et al. (2010), removed knots 8 days 18 years (appear sparse data areas) added knots 4, 14 24 years. aesthetic reasons, set right boundary knot 29y, slightly higher maximum age data. control specification prevents warnings messages result -parametrised nature model. One may stabilise model restricting variance-covariance matrix, example Argyle correlation model. result, fitted trajectories stabler regions sparse data. following snippet applies Argyle model. Figure 9: Observed fitted BMI SDS trajectories six subjects predicted lmer (red) Argyle (green) models. figure illustrates fitted trajectories Argyle model stabler areas sparse data. Figure 9 shows observed fitted BMI SDS trajectories models. per cent explained variance BMI SDS similar : 84 per cent. lmer model, fitted trajectory subject 8 reveals pretty rough estimate age 24y. Persons 1259 7460 low (-2.5 SD) high (+2.5 SD) BMI SDS adult age, respectively. Note model pulls adult BMI SDS estimates (red) towards global mean, due well-known bias-variance tradeoff (Gelman Hill 2007, 394). Pulling vigorous extremes. effect negligible average trajectories, subject 2447. Argyle model, trajectories slightly smoother stable adult ages limited data. rough estimate subject 8 gone. still gravity towards global mean knot 24y persons 1259 7460, lesser magnitude. fitted trajectories well behaved. , therefore, select kr solution analysis. identify critical periods, need predict adult overweight. Figure 9, three six subjects BMI measurement adult age. Since want results overly depend fitted extrapolations, restrict analysis sample persons adult measurement. following lines extract repeated measures 92 (306) individuals observed adult BMI. Figure 10: Fitted BMI SDS trajectories 92 subjects, 18 persons adult overweight (red = observed BMI adult age > 1.3 SDS), 74 individuals (grey) adult overweight. figure shows BMI distribution age 2y similar groups, whereas BMI ages 10y 14y highly predictive adult overweight. Figure 10 shows 92 fitted trajectories coloured adult overweight status (observed BMI SDS > 1.3). evident BMI SDS ages 14y 10y highly predictive adult overweight, also hold early childhood? Also, change specific periods predict later overweight? answer questions, fit simple linear models predict observed (fitted!) BMI SDS adult age fitted BMI SDS trajectories. following code block fits two models period 4y-6y. Model m1 predicts adult BMI SDS BMI SDS 6y, explains 45.3 per cent variance. Model m2 extends model pre-gain 4y 6y. pre-gain improves prediction, matters much gained 4y 6y. case, call interval 4y-6y critical period. found model 2 explain 53.6 per cent variance, thus 8.3 per cent . anova statement performs formal test. case, pre-gain significant last predictor 6y. Thus, interval 4y-6y classifies critical period. can repeat analyses age intervals, similar Table 3 Kenward (1987).","code":"knots <- round(c(0, 1/3, 1, 2, 4, 6, 10, 14, 24, 29), 3) labels <- c(\"birth\", \"4m\", \"1y\", \"2y\", \"4y\", \"6y\", \"10y\", \"14y\", \"24y\",             \"\") ctl <- lme4::lmerControl(   check.conv.grad = lme4::.makeCC(\"warning\", 0.02, NULL),   check.conv.singular = lme4::.makeCC(\"ignore\", 0.001)) fit_lmer <- brokenstick(bmi.z ~ age | id, data = mice::tbc,                         knots = knots, boundary = c(0, 29),                         method = \"lmer\", control = ctl) fit_kr <- brokenstick(bmi.z ~ age | id, data = mice::tbc,                       knots = knots, boundary = c(0, 29),                       seed = 41441, cormodel = \"argyle\") tbc1 <- mice::tbc %>%   filter(!is.na(ao) & first) %>%   select(id, nocc, sex) tbc2 <- mice::tbc.target %>%   filter(id %in% tbc1$id) prd <- predict(fit_kr, mice::tbc, x = \"knots\", shape = \"wide\",                group = tbc1$id) data <- bind_cols(prd,                   select(tbc1, -id),                   select(tbc2, -id)) head(data, 3) ## # A tibble: 3 × 15 ##      id   `0` `0.333`     `1`    `2`    `4`    `6`   `10`   `14`   `24` ##   <dbl> <dbl>   <dbl>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl> ## 1     8 0.371  -0.440  0.366   1.45   1.10   0.606  0.489  0.544 -0.822 ## 2    60 0.159  -0.372 -0.0442 -0.360 -0.595 -0.818 -1.03  -1.16  -1.46  ## 3    97 1.68    0.569  0.948   1.90   1.28   0.838  0.444  0.238  0.397 ## # … with 5 more variables: `29` <dbl>, nocc <dbl>, sex <dbl>, ao <dbl>, ## #   bmi.z.jv <dbl> ## # ℹ Use `colnames()` to see all variable names m1 <- lm(bmi.z.jv ~ `6`, data) m2 <- lm(bmi.z.jv ~ `6` + I(`6`-`4`), data) anova(m1, m2) ## Analysis of Variance Table ##  ## Model 1: bmi.z.jv ~ `6` ## Model 2: bmi.z.jv ~ `6` + I(`6` - `4`) ##   Res.Df  RSS Df Sum of Sq    F  Pr(>F)     ## 1     90 74.3                               ## 2     89 63.4  1      10.8 15.2 0.00019 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"time-to-time-correlations","dir":"Articles > Manual","previous_headings":"6 Applications","what":"Time-to-time correlations","title":"Broken Stick Model for Irregular Longitudinal Data","text":"conditional gain score defined (T. J. Cole 1995) \\[ {\\rm conditional}\\ Z_{\\rm gain} = \\frac{Z_2 - rZ_1}{\\sqrt{1-r^2}}, \\] \\(Z_1\\) \\(Z_2\\) standard deviation scores times \\(T_1\\) \\(T_2\\), \\(T_2>T_1\\), \\(r\\) correlation \\(Z_1\\) \\(Z_2\\). conditional gain corrects regression mean, selling point traditional velocity measures less sensitive measurement error (van Buuren 2007). practical difficulty obtain \\(r\\) given \\(T_1\\) \\(T_2\\). time--time correlation matrix needs known. Also, need interpolate \\(r\\) \\(T_1\\) \\(T_2\\) differs tabulated ages. broken stick model provides estimate time--time correlation matrix. brokenstick object stores variance-covariance matrix \\(\\Omega\\) random effects. perfectly fitting model (\\(\\sigma^2=0\\)) \\(\\Omega\\) equals time--time covariance matrix, get_omega(fit, = \"cor\") gives desired time--time correlation matrix. \\(\\sigma^2 > 0\\) \\(\\Omega\\) overestimates covariances observed data. general, need add within-residual variance estimate diagonal, thus \\(\\Omega + \\hat\\sigma^2 (n_i)\\) estimate time--time covariance matrix. child growth, expect correlation tapers difference \\(T_1\\) \\(T_2\\) grows. Also, fixed interval \\(T_2-T_1\\) expect correlation increase age. Ignoring uninteresting estimate age_3, find expectations hold. Altering number location knots may change . often useful scan time--time correlation matrix gross deviations expectations. happens, one simplify model, example, subjecting \\(\\Omega\\) correlation model. code fits model 22 equidistant breakpoints, likely large enough purposes. works restricts covariance-matrix Argyle correlation model, summarises information just two parameters. may extract re-estimate parameters create one-liner calculating \\(r\\). indefinitely add breakpoints. Suppose double number knots setting knots = seq(0, 2, 0.05). even kr able cope abort Error: Sigma symmetric positive. Thus, always, sensible ask software .","code":"fit <- brokenstick(hgt_z ~ age | id, data = smocc_200,                    knots = 1:4/2) omega <- get_omega(fit) t2t <- omega + diag(fit$sigma2, ncol(omega)) round(cov2cor(t2t), 2) ##         age_0 age_0.5 age_1 age_1.5 age_2 ## age_0    1.00    0.57  0.42    0.37  0.31 ## age_0.5  0.57    1.00  0.76    0.71  0.67 ## age_1    0.42    0.76  1.00    0.80  0.78 ## age_1.5  0.37    0.71  0.80    1.00  0.82 ## age_2    0.31    0.67  0.78    0.82  1.00 fit <- brokenstick(hgt_z ~ age | id, data = smocc_200,                    knots = seq(0, 2, 0.1), cormodel = \"argyle\") omega <- get_omega(fit) t2t <- omega + diag(fit$sigma2, ncol(omega)) dim(t2t) ## [1] 21 21"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"profile-analysis","dir":"Articles > Manual","previous_headings":"6 Applications","what":"Profile analysis","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Profile analysis (Morrison 1976; Johnson Wichern 1988) refers linear multivariate linear methods test differences population means treatment effects, typically regression analysis multivariate analysis variance (MANOVA). methods assume independence subjects, organise data subject level, express parameters interest linear combinations outcomes, like change scores, means derived quantities. Krone et al. (2020) report statistical analyses using linear mixed model time-varying individual subject data. section re-analyses data Figure 4 using broken stick model. data available brokenstick::weightloss object. Figure 11: Daily body weight (KG) 12 subjects followed 63 days one three conditions. graph illustrates irregular nature data. trajectories almost complete regular, fig.height=4.5, warning=FALSE, whereas others miss many daily measurements display surprising jumps around average weight level. Figure 11 charts daily body weight measurements twelve individuals followed nine weeks. investigators subdivided total duration three periods three weeks. Period one (week 1-3) acted control period. period 2 (week 4-6), investigators stimulated participants restrict food intake, period 3 (week 7-9) experimenters promoted physical activity. Subjects 4 12 received interventions opposite order. See Krone et al. (2020) detail. subjects adhere quite well data collection design. trajectories show gaps due missed measurements. extreme example trajectory hovers around value 95 kilograms (KG). curves display stretches lines, suggesting missed measurements linearly interpolated. One series shows surprising spikes, likely measurement errors. , data perfectly illustrate inescapable imperfections real data. remainder section discusses two ways estimate effect diet physical activity body weight.","code":"data <- brokenstick::weightloss ggplot(data, aes(day, body_weight, group = subject,                  colour = condition)) +   scale_x_continuous(name = \"Day\", breaks = c(0, 21, 42, 63), minor_breaks = c(7, 14, 28, 35, 49, 56)) +   ylab(\"Body weight (KG)\") +   geom_line() + geom_point(size = 0.7) +   theme_light() +   theme(legend.position = \"bottom\") ## Warning: Removed 28 row(s) containing missing values (geom_path). ## Warning: Removed 61 rows containing missing values (geom_point)."},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"constant-model","dir":"Articles > Manual","previous_headings":"6 Applications > 6.3 Profile analysis","what":"Constant model","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Figure 12: Constant model. Observed fitted trajectories model summarises experimental period constant. estimated level approximately mean measurements made period. model produces sudden jumps ages condition changes thus fails describe data well. model underlying Figure 12 summarises trajectory within period constant, mean. obtain estimate means setting degree = 0 argument. model gives fair representation trajectory subjects 9 (persistent downward trend), 1 5 (trend). hand, model fails capture patterns subjects 2, 4 8 (rebound period 3) 11 (inverse rebound). straightforward quantify effects Diet Activity relative Control. next code snippet calculates effects per person, accounting intervention order reversal subjects 4 12. average weight caloric restriction 564 grams lower control. find 848 grams lower body weight stimulate physical activity. tempted believe exercise reduces weight diet. However, except subjects 4 12, investigators administered activity treatment diet treatment, difference relative control represents combined effect diet activity body weight. might relevant study difference training diet (third column). average difference -284 grams suggests diet effective physical activity. Realise also estimate entirely satisfactory. First, subjects 4 12 reversed administration, difference make sense . Second, anyone tried lose weight can attest, “quick wins” likely period 2 period 3. Although possible account sequence effects, intuitive analysis data.","code":"data <- brokenstick::weightloss fit0 <- brokenstick(body_weight ~ day | subject, data,                     knots = c(0, 21, 42, 63), degree = 0,                     method = \"lmer\") plot(fit0, size_y = 0, color_y = rep(\"grey\", 2), what = \"all\",      scales = \"free_y\", xlab = \"Day\", ylab = \"Body weight (KG)\",      n_plot = 12, ncol = 4) prd <- data.frame(predict(fit0, data, x = \"knots\", shape = \"wide\")) control <- prd[, 2] diet <- prd[, 3] diet[c(4, 12)] <- prd[c(4, 12), 4] activity <- prd[, 4] activity[c(4, 12)] <- prd[c(4, 12), 3] effects <- 1000 * data.frame(   diet_control = diet - control,   activity_control = activity - control,   activity_diet = activity - diet) round(effects) ##    diet_control activity_control activity_diet ## 1           174              179             5 ## 2         -1055            -1759          -704 ## 3           961             1045            84 ## 4         -1846             -723          1123 ## 5           371              149          -223 ## 6         -1582            -3269         -1687 ## 7          -158             -514          -356 ## 8          -614            -1057          -443 ## 9         -1166            -2039          -872 ## 10         -594            -1210          -616 ## 11           63             -559          -621 ## 12        -1322             -425           897 round(colMeans(effects)) ##     diet_control activity_control    activity_diet  ##             -564             -848             -284"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"broken-stick-model-1","dir":"Articles > Manual","previous_headings":"6 Applications > 6.3 Profile analysis","what":"Broken stick model","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Figure 13: Broken stick model. Observed fitted trajectories model summarises experimental period line. slope indicates change period. model connects lines adjacent periods provides informative description data. Figure 13 shows data Figure 12 now fitted linear broken stick model. model also suggests persistent downward trend subject 9 absence trend participants 1 5. Also, model now correctly identifies prominent zig-zag patterns persons 2, 4, 8 11 across three experimental periods. natural way quantify effect intervention calculate -estimate per period. example, person 2 effect diet \\(60,933 - 63,671 = -2,738\\) grams, activity \\(62,635 - 60,933 = +1,701\\) grams. following code accounts alternate treatment ordering subjects 4 12. average effects -201 grams (control), -683 grams (diet) -301 grams (activity). Although statistically significant, slight decrease 201 grams control period suggests weight monitoring may motivate participant lose weight. effect estimates diet activity similar magnitude . Still, can sizeable discrepancies individual level, e.g., subjects 2 11. may obtain simple estimate sequence effect linear regression Variable y change grams observed periods 2 3, activity dummy variable treatment (0 = diet, 1 = activity) activity2 dummy variable indicating activity occurred period 2 (0 = , 1 = yes). average loss weight per period equal 492 grams. second model shows diet reduces body weight activity (382 grams). third model indicates activity applied period 2 effective period 3, reduces weight additional 123 grams. course, bear mind calculated results individuals. Hence, sensitive substantial estimation error. application demonstrates broken stick model can effectively capture rapid linear changes experiments. Even though actual timing observations may erratic, easy define, interpret calculate intuitive effect estimates individual level. Note analysis assumed instantaneous effect interventions. expect delay, may right-shift knots days re-estimate broken stick model. varying number days, may able detect optimal delay factor.","code":"ctl_lmer <- lme4::lmerControl(   check.conv.grad = lme4::.makeCC(\"warning\", tol = 0.01)) fit1 <- brokenstick(body_weight ~ day | subject, data,                     knots = c(0, 21, 42, 63), method = \"lmer\",                     control = ctl_lmer) plot(fit1, size_y = 0, color_y = rep(\"grey\", 2), what = \"all\",      size_yhat = 1.5, scales = \"free_y\", ,      xlab = \"Day\", ylab = \"Body weight (KG)\",      n_plot = 12, ncol = 4) prd <- data.frame(predict(fit1, data, x = \"knots\", shape = \"wide\")) control <- prd[, 3] - prd[, 2] diet <- prd[, 4] - prd[, 3] diet[c(4, 12)] <- prd[c(4, 12), 5] - prd[c(4, 12), 4] activity <- prd[, 5] - prd[, 4] activity[c(4, 12)] <- prd[c(4, 12), 4] - prd[c(4, 12), 3] effects <- 1000 * data.frame(   control = control,   diet = diet,   activity = activity) round(effects) ##    control  diet activity ## 1     -303   459     -411 ## 2       95 -2738     1701 ## 3      847   479      570 ## 4      117   682    -2168 ## 5      637  -606      659 ## 6     -756 -2594     -833 ## 7      251  -783      277 ## 8     -297 -1112      349 ## 9    -1006 -1389     -424 ## 10    -190 -1096     -290 ## 11    -908   929    -2573 ## 12    -902  -423     -468 round(colMeans(effects)) ##  control     diet activity  ##     -201     -683     -301 df <- data.frame(y = 1000 * c(diet, activity),                  activity = rep(c(0, 1), each = 12),                  activity2 = rep(c(rep(0, 3), 1, rep(0, 7), 1), 2)) coef(lm(y ~  1, data = df)) ## (Intercept)  ##        -492 coef(lm(y ~ activity, data = df)) ## (Intercept)    activity  ##        -683         382 coef(lm(y ~ activity + activity2, data = df)) ## (Intercept)    activity   activity2  ##        -662         382        -123"},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"problem","dir":"Articles > Manual","previous_headings":"6 Applications > 6.4 Curve interpolation","what":"Problem","title":"Broken Stick Model for Irregular Longitudinal Data","text":"growth chart visualises individual trajectory relative set centile lines. may store centile line set coordinates relatively dense age grid. connect adjacent vertices straight line, centile appear smooth time. However, plotting method runs trouble ages wide apart. section shows can create realistic interpolation sparse time data.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"interpolation-in-measurement-scale","dir":"Articles > Manual","previous_headings":"6 Applications > 6.4 Curve interpolation","what":"Interpolation in measurement scale","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Suppose measured length boy ages 1 month (52.6 cm) 14 months (81.7 cm). following code block uses AGD::y2z() function convert measurements SDS relative reference Fourth Dutch Growth Study. Figure 14: effect three interpolation methods (linear cm (blue), linear SDS (red), broken stick model (green)). method, vertical line indicates age interpolated curve crosses mean age-conditional length distribution. linear methods results unrealistic trajectories intermediate ages. example, points blue lines low. Interpolation broken stick method alternative correctly describes faster growth first months. period boy grows moderately short (-1.0 SD month 1) relatively tall (+1.0 SD month 14). Figure 14 shows usual representation growth chart straight line drawn two values. Due concave shape centile lines, straight line connects two measurements starts -1.0 SD, touches -2.0 SD centile around 4.5 months, back -1.0 SD age 7.5 months, crosses 0.0 SD line 11.5 months, ends +1.0 SD 14 months. right hand side graph portrays interpolated growth curve SDS scale. Since length growth infancy linear time, finding real growth curve like extremely unlikely. Since just two data points smoothing data help either.","code":"boy <- data.frame(x = c(1, 14), y = c(52.6, 81.7)) ref <- AGD::nl4.hgt boy$z <- AGD::y2z(y = boy$y, x = boy$x/12, sex = \"M\", ref = ref) boy$z ## [1] -0.980  0.994"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"interpolation-in-the-sds-scale","dir":"Articles > Manual","previous_headings":"6 Applications > 6.4 Curve interpolation","what":"Interpolation in the SDS scale","title":"Broken Stick Model for Irregular Longitudinal Data","text":"first alternative apply linear interpolation SDS scale. option attractive centile lines straight SDS scale. red curves Figure 14 illustrate interpolation SDS scale. definition, line connects measurements straight SDS score scale. cm scale, representation realistic pleasing eye. curve crosses 0 SD line halfway, 7.5 months. approach considerable improvement interpolation \\(Y\\)-scale, still ideal. assumption underlying interpolation SDS increment constant across time. assumption false , however. Since length growth faster first half-year, expect larger share increment occur earlier months. words, cross-point 7.5 months late.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"interpolation-by-the-broken-stick-model","dir":"Articles > Manual","previous_headings":"6 Applications > 6.4 Curve interpolation","what":"Interpolation by the broken stick model","title":"Broken Stick Model for Irregular Longitudinal Data","text":"second alternative model-based interpolation. Assuming availability fitted broken stick model, specify time grid, say twice month, predict length ages given data observed trajectory. expected curve represents likely values model intermediate ages. following code calculates relevant estimates fit_200 fitted model: green curve Figure 14 shows results broken stick model. curve measurement scale represents likely course according broken stick model. Note now child realises larger share change first months. result, cross-point predicted value intersects 0 SD line now around 4.5 months, considerably earlier obtained two interpolation methods. right hand side plot confirms steeper slope first part. Note method treats rising declining curves alike. example, boy’s length 57 cm month 1 (+1.0 SD) 76 cm month 14 (-1.0 SD), cross-point also around 4.5 months (shown). Observe method leaves world pure interpolation moves towards approximation data model. observed predicted lengths exactly equal. difference small may hardly notice discrepancy plotted measurement scale, conspicuous plotted SDS. Thanks added knowledge child growth process, broken stick model provides realistic expected trajectory intermediate ages.","code":"age <- round(seq(1, 14, 0.5), 3) z <- rep(NA, length(age)) z[1] <- boy$z[1]; z[length(z)] <- boy$z[2] zout <- predict(fit_200, x = age/12, y = z, shape = \"vector\") yout <- AGD::z2y(x = age/12, z = zout, ref = ref)"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"multiple-imputation","dir":"Articles > Manual","previous_headings":"6 Applications","what":"Multiple imputation","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Remember Section 5.5 broken stick estimates conditional means. may tempted analyse estimates “just data”, variability real data. example, suppose calculate correlation matrix broken stick estimates. know values matrix exceed underlying observed data. accounting fact leads overconfident predictions results good true. Multiple imputation (Rubin 1987; van Buuren 2018b) restores variability adding noise. may fit standard complete-data software imputed data, obtain valid regression weights, confidence intervals \\(p\\) values wide range conditions. default, method kr executes 200 iterations Kasim-Raudenbush sampler. nimp argument control_kr() function specifies number multiple imputations. following call brokenstick() function creates plots 20 imputations missing outcome (hgt_z ). Figure 15: Observed data (blue) 20 imputed trajectories (grey) three subjects SMOCC data. Imputed trajectories possible realizations observed data hypothetical case observations made specified break ages. Note pattern child 10001 certain child 10022. Figure 15 displays observed data three persons plotted top 20 imputed trajectories. within-person within-time average grey trajectories approximates broken stick estimate (shown ). observed curve panel occasionally strays towards boundaries grey bundle. behaviour expected indicates blue curve performs like grey curve. Section 6.2 showed can estimate time--time correlation matrix. alternative way calculate imputed data, follows: Another important application multiply-imputed curves obtain correct confidence intervals \\(p\\) values estimates scientific interest. convenient way convert brokenstick object object class mids, defined mice package. brokenstick package currently features perform conversion.","code":"knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24)/12, 4) data <- bind_rows(smocc_200[!is.na(smocc_200$hgt_z), ],                   expand.grid(id = unique(smocc_200$id), age = knots)) fit_kr <- brokenstick(hgt_z ~ age | id, data = data,                       knots = knots,                       nimp = 20, seed = 15244) plot(fit_kr, show = c(TRUE, FALSE, TRUE),      group = c(10001, 10005, 10022),      xlab = \"Age (years)\", ylab = \"Length (SDS)\") cormat <- cor(matrix(t(fit_kr$imp), ncol = length(knots))) dimnames(cormat) <- list(knots, knots) round(cormat, 2) ##           0 0.0833 0.1667 0.25  0.5 0.75    1 1.25  1.5    2 ## 0      1.00   0.68   0.70 0.63 0.47 0.43 0.38 0.33 0.32 0.24 ## 0.0833 0.68   1.00   0.81 0.79 0.70 0.58 0.53 0.51 0.50 0.39 ## 0.1667 0.70   0.81   1.00 0.81 0.73 0.60 0.52 0.49 0.52 0.42 ## 0.25   0.63   0.79   0.81 1.00 0.75 0.64 0.58 0.56 0.53 0.46 ## 0.5    0.47   0.70   0.73 0.75 1.00 0.83 0.81 0.73 0.75 0.65 ## 0.75   0.43   0.58   0.60 0.64 0.83 1.00 0.84 0.77 0.77 0.71 ## 1      0.38   0.53   0.52 0.58 0.81 0.84 1.00 0.84 0.81 0.76 ## 1.25   0.33   0.51   0.49 0.56 0.73 0.77 0.84 1.00 0.84 0.82 ## 1.5    0.32   0.50   0.52 0.53 0.75 0.77 0.81 0.84 1.00 0.83 ## 2      0.24   0.39   0.42 0.46 0.65 0.71 0.76 0.82 0.83 1.00"},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"curve-matching","dir":"Articles > Manual","previous_headings":"6 Applications","what":"Curve matching","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Curve matching (van Buuren 2014) tool assist interpretation prediction individual growth curves. idea follows. Suppose measure growth target child half year plot measurements onto growth chart. Curve matching nearest-neighbour technique relies historical growth data. finds, say, ten children similar target child, adds curves matches child’s chart. matching done right, bundle historic growth curves suggests target child develop future. Figure 16: Curve matching. Predict infant length 14 months given length data 6 months using 10 matches. red curve observed data target child. bundle grey curves observed length curves children match trajectory target child month 6. blue line represents likely future trajectory target child towards month 14. variation grey curves represents amount uncertainty trajectory prediction. Figure 16 screen shot demo Shiny app Joint Automatic Measurement Evaluation System (JAMES). red curve corresponds five measurements target child made first six months. ten grey curves historic growth curves ten matched children. may define similarity many ways. use linear model predict length age 14m previous length data. distance target child another child equal difference predicted values. procedure lifts data matches database, plots observed growth curves onto chart grey curves. method finding nearest neighbours known predictive mean matching grown powerful technique missing data (van Buuren 2018b). bundle grey curves indicates possible future trajectories target child. wider bundle, uncertain future growth (Toet et al. 2019). mean bundle likely path. Graphically dotted blue curve last measurement age outcome. Let’s look numerical example. split data one target child 199 donor children, fit broken stick model donor set. timepoints donor data enter broken stick model. Note target_data contains observations first five visits. now fit prediction model child-level donor data. prediction model contains broken stick estimates length SDS 6 months, well sex, gestational age birth weight covariates. next step extract model predictions donors target find ten closest donors. steps contain basic ingredients find_matches() function chartplotter package (van Buuren 2021a). Finally, let us study observed fitted trajectories ten matches. Figure 17: Curve matching. Observed (blue) fitted (red) trajectories 10 closest matches subject 10001. Fitted values outcome age (1.25y) close predicted value target child (0.101 SD). ten trajectories close prediction (0.101 SD) target child age 1.25 years. Note guarantee histories identical. matches relatively flat curves, (10051, 11023, 11086) show striking rising patterns. Nevertheless, candidates best terms model prediction. wish curves matches first six months closer target case, consider alternative metrics. simple measure sum squares differences broken stick estimates. selection may visually pleasing, expense prediction accuracy. hand, less tied setting one particular future time point, measures may work better “future” vaguely defined time interval. still open research question strike balance. Whatever objectives preferences user might , curve matching methodology, illustrated , tremendous flexibility easy adapt.","code":"donor_data <- smocc_200 %>%   filter(id != \"10001\") target_data <- smocc_200 %>%   filter(id == \"10001\" & age < 0.51)  knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24)/12, 4) fit <- brokenstick(hgt_z ~ age | id, data = donor_data,                    knots = knots, seed = 15244) covariates <- donor_data %>%   group_by(id) %>%   slice(1) bse <- predict(fit, donor_data, x = \"knots\", shape = \"wide\") donors <- bind_cols(covariates, select(bse, -id)) model <- lm(`1.25` ~ `0` + `0.0833` + `0.1667` + `0.25` + `0.5`             + sex + ga + bw, data = donors) summary(model) ##  ## Call: ## lm(formula = `1.25` ~ `0` + `0.0833` + `0.1667` + `0.25` + `0.5` +  ##     sex + ga + bw, data = donors) ##  ## Residuals: ##     Min      1Q  Median      3Q     Max  ## -1.3328 -0.2567 -0.0151  0.2634  1.4653  ##  ## Coefficients: ##              Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  4.87e-01   8.99e-01    0.54    0.589     ## `0`          6.74e-02   5.33e-02    1.27    0.207     ## `0.0833`     5.89e-02   8.69e-02    0.68    0.499     ## `0.1667`    -2.55e-01   9.92e-02   -2.57    0.011 *   ## `0.25`      -2.16e-01   1.07e-01   -2.01    0.046 *   ## `0.5`        1.21e+00   7.54e-02   16.07   <2e-16 *** ## sexmale      9.13e-02   6.42e-02    1.42    0.157     ## ga          -7.05e-03   2.25e-02   -0.31    0.754     ## bw          -7.53e-05   1.09e-04   -0.69    0.491     ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Residual standard error: 0.436 on 190 degrees of freedom ## Multiple R-squared:  0.777,  Adjusted R-squared:  0.767  ## F-statistic: 82.5 on 8 and 190 DF,  p-value: <2e-16 donors_pred <- predict(model) names(donors_pred) <- donors$id  target <- bind_cols(   slice(target_data, 1),   select(predict(fit, target_data, x = \"knots\", shape = \"wide\"), -id)) target_pred <- predict(model, newdata = target)  matches <- sort(abs(donors_pred - target_pred))[1:10] matches ##   11013   10032   11035   10093   10051   11063   11086   11083   11102  ## 0.00422 0.00578 0.01833 0.01889 0.02507 0.02657 0.03069 0.03744 0.05118  ##   11049  ## 0.05922 ids <- as.numeric(names(matches)) plot(fit, group = ids,      xlim = c(0, 1.4), size_y = 1, size_yhat = 0,      xlab = \"Age (years)\", ylab = \"Length (SDS)\",      ncol = 5)"},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"overview-1","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Overview","title":"Broken Stick Model for Irregular Longitudinal Data","text":"paper introduces new approach solve problem irregular longitudinal data. method absorbs time-dependent information set broken stick estimates subject level. primary advantage simplifies analysis splitting modelling problem two steps. First, solve timing problem, solve substantive/scientific problem. method mathematically simple, conceptually appealing, yet principled.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"distinctive-features","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Distinctive features","title":"Broken Stick Model for Irregular Longitudinal Data","text":"assumptions model cover many cases practical interest: straight line breakpoints, multivariate normal distribution random effects, MAR assumption including future data. Despite relatively low number model parameters, possible obtain close fit data, sometimes almost perfect reconstruction (c.f., Figure 7). need specify equidistant breakpoints. Applications human growth development often natural using non-uniformly spaced knots, easy model. Many people find easier understand raw data values summaries. broken stick model invites visualisation actual data points time makes easy portray uncertainty bundle curves. direct visualisation options contribute explainable responsible personalised analyses appeal broad user group.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"current-limitations","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Current limitations","title":"Broken Stick Model for Irregular Longitudinal Data","text":"broken stick model, presented , uses just three variables: time, measurement group. design choice simplifies interpretation estimation. lack covariates model implies transformation irregular data repeated measures identical every subject. long residual error small, relations ---model variables thus remain intact. possibility include covariates second-round enhances modular modern analytic pipelines. Yet, prefer direct estimation effects one extensive analysis. current package support covariates. broken stick method intended aligning observations, every individual number location breakpoints. technique assumes subjects share time axis. applications, synchronisation start natural (e.g., birth, start experiment), easy . cases, one might wish anchor middle, e.g., menarche, occurs different ages different individuals (Naumova, Must, Laird 2001), scientific interest happens anchor. also make sense fasten end, e.g., graduation death. choice anchor may matter less cyclic processes. example, weekly data may important anchor day week actual date age. Irrespective actual timings observed data, number location breakpoints identical subjects. method less suited applications sensible common time axis, breakpoints vary individuals.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"software","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Software","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Kasim-Raudenbush sampler (Kasim Raudenbush 1998) fast flexible. produces estimates residual error variance per subject, can accommodate correlation models supports multiple imputation ---box. research needed establish statistical properties especially compared lmer() established methods. also interesting study suitability correlation models implemented lme4qtl package (Ziyatdinov et al. 2018). training data stored, instances light brokenstick class objects tiny, often 15–20 Kb. Features implemented, useful future versions include separate impute() function inputs class brokenstick returns class mids, Trelliscope (Hafen Schloerke 2020) viewer quickly peruse hundreds individuals model fits, extension multivariate time-varying child-level data, generalisation degree > 1 support quadratic cubic splines.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"computational-setup","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Computational setup","title":"Broken Stick Model for Irregular Longitudinal Data","text":"running Mac Studio 2022, MacOs Monterey 12.4, 32Gb RAM R version 4.2.1 (2022-06-23) brokenstick version 2.2.0.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"methodological-advances","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Methodological advances","title":"Broken Stick Model for Irregular Longitudinal Data","text":"primary modelling task user set proper knot locations. One might envision scenarios want search “best” places. yet clear , far automate knot placement strategies. need insight statistical properties procedures execute analysis sequence steps. relative pro’s con’s choices multiple imputation versus random effects yet fully understood. current procedure assumes within-person error constant across time points. However, might expect observing data close breakpoint reduce uncertainty estimate. applications, might require estimate equal observed data value observation time coincides breakpoints. models scenarios considerably complicated, also increase efficiency.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/manual/manual.html","id":"conclusion-1","dir":"Articles > Manual","previous_headings":"7 Conclusion","what":"Conclusion","title":"Broken Stick Model for Irregular Longitudinal Data","text":"paper highlighted various applications broken stick model: critical periods, time--time correlation, profile analysis, curve interpolation, multiple imputation personalised prediction. applications certainly exhaust potential model. hope availability software stimulate creative uses, ideas experiments.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Help for old friends","text":"brokenstick package three major interfaces: version brokenstick 0.62.1 (May 2020) version brokenstick 1.1.1 (May 2020 - Nov 2021) Versions higher brokenstick 2.0.0 (Nov 2021 - now) document summarises main changes brokenstick 2.0.0. See “Help old friends” brokenstick 1.1.1 overview previous changes 0.75.0 1.1.1.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"main-changes","dir":"Articles","previous_headings":"Background","what":"Main changes","title":"Help for old friends","text":"Function brokenstick() version 2.0.0 sets Kasim-Raudenbush sampler default method. former method lme4::lmer() remains available setting method = \"lmer\" argument. Version 2.0.0 adopts variable names coda package (e.g., start, end, thin, niter, ) stores results Kasim-Raudenbush sampler objects class mcmc. method = \"kr\" one may now inspect solution sampler standard functions coda package. method = \"lmer\" can apply functions lme4 package merMod objects. Version 2.0.0 redefines brokenstick class. New entries include call, formula, internal, sample, light, data, imp mod. Removed entries knots (renamed internal) draws (renamed imp). may omit newdata argument training data. Setting light = TRUE creates small version brokenstick object. Objects class brokenstick backwards compatible, one regenerate objects class brokenstick order use newer features 2.0.0. Version 2.0.0 conforms classic model fitting interface R. Renames new_data argument newdata conform predict.lm(). Methods plot() predict() longer require newdata argument. special cases predict() updated explained documentation examples. Version 2.0.0 adds methods coef(), fitted(), model.frame(), model.matrix(), print() summary() brokenstick object. Simplifies algorithmic control. Renames control_brokenstick() set_control() removes layer control list.","code":""},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"minor-changes","dir":"Articles","previous_headings":"Background","what":"Minor changes","title":"Help for old friends","text":"Stabilises rgamma() calls KR-algorithm edge cases. predict_brokenstick() can now work (internal) training (external) test data. Removes superfluous type argument predict.brokenstick() Adds function get_omega() extract variance-covariance matrix broken stick estimates Adds choice \"dropfirst\" get_knots() Improves error messages edge cases test-brokenstick_edge.R Perform stricter tests arguments brokenstick() Introduces argument warn_splines make_basis() suppress uninteresting warns splines::bs() Removes superfluous knotnames argument make_basis() Argument x make_basis() now vector instead column vector Introduces new xname argument make_basis() set xname","code":""},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"install-legacy-version","dir":"Articles","previous_headings":"","what":"Install legacy version","title":"Help for old friends","text":"recommend changing code reflect changes. needed, version 1.1.1 can installed ","code":"library(\"devtools\") install_github(\"growthcharts/brokenstick@9b969af\")"},{"path":[]},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"example-1-fit-model","dir":"Articles","previous_headings":"Examples","what":"Example 1: Fit model","title":"Help for old friends","text":"Fit model, version 0.75.0 - 1.1.1: Fit model, version 2.0.0:","code":"data <- brokenstick::smocc_200  # formula interface fit1 <- brokenstick(hgt_z ~ age | id, data)  # XY interface - numeric vector # Deprecated in v2.0.0 fit2 <- with(data, brokenstick(age, hgt_z, id))  # XY interface - data.frame # Deprecated in v2.0.0 fit3 <- with(data, brokenstick(data.frame(age), hgt_z, id))  # XY interface - matrix # Deprecated in v2.0.0 tt <- as.matrix(data[, c(1, 2, 7)]) fit4 <- brokenstick(tt[, \"age\", drop = FALSE],                     tt[, \"hgt_z\", drop = FALSE],                     tt[, \"id\", drop = FALSE]) data <- brokenstick::smocc_200  # formula interface fit1 <- brokenstick(hgt_z ~ age | id, data)"},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"example-2-predict-model","dir":"Articles","previous_headings":"Examples","what":"Example 2: Predict model","title":"Help for old friends","text":"Predict model, version 0.75.0 - 1.1.1: Predict model, version 2.0.0:","code":"# predict at observed data p1 <- predict(fit1, data)  # predict at knots p2 <- predict(fit1, data, x = \"knots\")  # predict at both observed data and knots p3 <- predict(fit1, data, x = \"knots\", strip_data = FALSE)  # predict knots, broad matrix p4 <- predict(fit1, data, x = \"knots\", shape = \"wide\") # predict at observed data p1 <- predict(fit1)  # predict at knots p2 <- predict(fit1, x = \"knots\", include_data = FALSE)  # predict at both observed data and knots p3 <- predict(fit1, x = \"knots\")  # predict knots, broad matrix p4 <- predict(fit1, x = \"knots\", shape = \"wide\")"},{"path":"https://growthcharts.org/brokenstick/articles/oldfriends.html","id":"example-3-plot-model","dir":"Articles","previous_headings":"Examples","what":"Example 3: Plot model","title":"Help for old friends","text":"Plot trajectories, version 0.75.0 - 1.1.1:  Plot trajectories, version 2.0.0:","code":"ids <- c(10001, 10005, 10022) plot(fit1, data, group = ids, what = \"all\") ids <- c(10001, 10005, 10022) plot(fit1, group = ids, what = \"all\")"},{"path":"https://growthcharts.org/brokenstick/articles/perfectmodel.html","id":"objective","dir":"Articles","previous_headings":"","what":"Objective","title":"Check perfect model","text":"general, broken stick model smoothes observed growth trajectory. happens observations already aligned break ages? model perfectly represent data? covariance matrix random effects (\\(\\Omega)\\) equal covariance measurements? \\(\\sigma^2\\) equal zero?","code":""},{"path":"https://growthcharts.org/brokenstick/articles/perfectmodel.html","id":"data-generation","dir":"Articles","previous_headings":"","what":"Data generation","title":"Check perfect model","text":"adapt code http://www.davekleinschmidt.com/sst-mixed-effects-simulation/simulations_slides.pdf generate test data: Let us first model perfect situation \\(\\sigma^2 = 0\\) (set resid_var zero) ages align perfectly. Check correlation matrix \\(y\\)’s.","code":"library(\"plyr\") library(\"mvtnorm\") make_data_generator <- function(resid_var = 1,                                 ranef_covar = diag(c(1, 1)), n = 100                                 ) {   ni <- nrow(ranef_covar)   generate_data <- function() {     # sample data set under mixed effects model with random slope/intercepts      simulated_data <- rdply(n, {       b <- t(rmvnorm(n = 1, sigma = ranef_covar))       epsilon <- rnorm(n = length(b), mean = 0, sd = sqrt(resid_var))       b + epsilon     })   data.frame(     subject = rep(1:n, each = ni),     age = rep(1:ni, n),     simulated_data)   } } set.seed(77711) covar <- matrix(c(1, 0.7, 0.5, 0.3,                   0.7, 1, 0.8, 0.5,                   0.5, 0.8, 1, 0.6,                   0.3, 0.5, 0.6, 1), nrow = 4) gen_dat <- make_data_generator(n = 10000,                                 ranef_covar = covar,                                resid_var = 2) data <- gen_dat() head(data) ##   subject age .n          X1 ## 1       1   1  1 -0.95843228 ## 2       1   2  1 -2.28067938 ## 3       1   3  1 -2.71322094 ## 4       1   4  1 -2.67658325 ## 5       2   1  2  0.01657697 ## 6       2   2  2 -1.51680763 library(\"tidyr\") library(\"dplyr\") ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:plyr': ##  ##     arrange, count, desc, failwith, id, mutate, rename, summarise, ##     summarize ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union d <- as_tibble(data[,-3]) broad <- t(spread(d, subject, X1))[-1,] cor(broad) ##           [,1]      [,2]      [,3]      [,4] ## [1,] 1.0000000 0.2322704 0.1683649 0.1150505 ## [2,] 0.2322704 1.0000000 0.2701451 0.1605367 ## [3,] 0.1683649 0.2701451 1.0000000 0.2187383 ## [4,] 0.1150505 0.1605367 0.2187383 1.0000000"},{"path":"https://growthcharts.org/brokenstick/articles/perfectmodel.html","id":"fit-model","dir":"Articles","previous_headings":"","what":"Fit model","title":"Check perfect model","text":"Fit broken stick model, knots specified ages 1:4.","code":"library(\"brokenstick\") knots <- 1:3 boundary <- c(1, 4) fit <- brokenstick(X1 ~ age | subject, data,                     knots = knots, boundary = boundary,                    method = \"lmer\") ## Warning: number of observations (=40000) <= number of random effects (=40000) ## for term (0 + age_1 + age_2 + age_3 + age_4 | subject); the random-effects ## parameters and the residual variance (or scale parameter) are probably ## unidentifiable ## Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : ## unable to evaluate scaled gradient ## Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : ## Model failed to converge: degenerate Hessian with 1 negative eigenvalues omega <- fit$omega beta <- fit$beta sigma2 <- fit$sigma2 round(beta, 2) ## age_1 age_2 age_3 age_4  ## -0.03 -0.03  0.02  0.01 round(sigma2, 4) ## [1] 1.3392 # correlation random effects round(covar, 3) ##      [,1] [,2] [,3] [,4] ## [1,]  1.0  0.7  0.5  0.3 ## [2,]  0.7  1.0  0.8  0.5 ## [3,]  0.5  0.8  1.0  0.6 ## [4,]  0.3  0.5  0.6  1.0 round(omega, 2) ##       age_1 age_2 age_3 age_4 ## age_1  1.72  0.70  0.51  0.35 ## age_2  0.70  1.62  0.81  0.48 ## age_3  0.51  0.81  1.70  0.66 ## age_4  0.35  0.48  0.66  1.65 # covariances measured data round(omega + diag(sigma2, 4), 3) ##       age_1 age_2 age_3 age_4 ## age_1 3.057 0.699 0.513 0.348 ## age_2 0.699 2.959 0.810 0.477 ## age_3 0.513 0.810 3.040 0.659 ## age_4 0.348 0.477 0.659 2.988 round(cov(broad), 3) ##       [,1]  [,2]  [,3]  [,4] ## [1,] 3.057 0.699 0.513 0.348 ## [2,] 0.699 2.959 0.810 0.477 ## [3,] 0.513 0.810 3.040 0.659 ## [4,] 0.348 0.477 0.659 2.988 # convert to time-to-time correlation matrix round(cov2cor(omega + diag(sigma2, 4)), 3) ##       age_1 age_2 age_3 age_4 ## age_1 1.000 0.232 0.168 0.115 ## age_2 0.232 1.000 0.270 0.161 ## age_3 0.168 0.270 1.000 0.219 ## age_4 0.115 0.161 0.219 1.000 round(cor(broad), 3) ##       [,1]  [,2]  [,3]  [,4] ## [1,] 1.000 0.232 0.168 0.115 ## [2,] 0.232 1.000 0.270 0.161 ## [3,] 0.168 0.270 1.000 0.219 ## [4,] 0.115 0.161 0.219 1.000"},{"path":"https://growthcharts.org/brokenstick/articles/perfectmodel.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Check perfect model","text":"\\(\\sigma^2=0\\), -diagonal elements \\(\\Omega\\) reproduce correlations among \\(y\\)’s. estimate \\(\\sigma^2\\) high (0.13 instead 0). \\(\\sigma^2 > 0\\), \\(\\hat C = \\Omega + \\hat\\sigma^2 (n_i)\\) reproduces sample covariance matrix \\(y\\)’s exactly. cov2cor(hatC) reproduces sample time--time correlation matrix.","code":""},{"path":"https://growthcharts.org/brokenstick/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stef van Buuren. Author, maintainer.","code":""},{"path":"https://growthcharts.org/brokenstick/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Buuren S (2022). “Broken Stick Model Irregular Longitudinal Data.” Journal Statistical Software, Submitted publication(X), X-X. https://github.com/growthcharts/brokenstick.","code":"@Article{,   title = {Broken Stick Model for Irregular Longitudinal Data},   author = {Stef {van Buuren}},   journal = {Journal of Statistical Software},   year = {2022},   volume = {Submitted for publication},   number = {X},   pages = {X-X},   url = {https://github.com/growthcharts/brokenstick}, }"},{"path":"https://growthcharts.org/brokenstick/index.html","id":"brokenstick","dir":"","previous_headings":"","what":"Broken Stick Model for Irregular Longitudinal Data","title":"Broken Stick Model for Irregular Longitudinal Data","text":"broken stick model describes set individual curves linear mixed model using second-order linear B-splines. main use model align irregularly observed data user-specified grid break ages. fitting can done Z-score scale, nonlinearities irregular data can treated separate problems. package contains functions fitting broken stick model data, exporting parameters model independent use outside package, predicting broken stick curves new data.","code":""},{"path":"https://growthcharts.org/brokenstick/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Install brokenstick package CRAN follows: latest version (revision branch) can installed GitHub follows:","code":"install.packages(\"brokenstick\") install.packages(\"remotes\") remotes::install_github(\"growthcharts/brokenstick\")"},{"path":"https://growthcharts.org/brokenstick/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Broken Stick Model for Irregular Longitudinal Data","text":"broken stick model describes set individual curves linear mixed model using linear B-splines. model can used smooth growth curves series connected straight lines; align irregularly observed curves common age grid; create synthetic curves user-specified set break ages; estimate time--time correlation matrix; predict future observations. user specifies set break ages straight lines connect. individual obtains estimate break age, set estimates individual form smoothed version observed trajectory. main assumptions broken stick model : trajectory break ages follows straight line, generally particular interest; Broken stick estimates follow common multivariate normal distribution; Missing data missing random (MAR); Individuals exchangeable uncorrelated. order conform assumption multivariate normality, user may fit broken stick model suitably transformed data yield standard normal () scale. Unique feature broken stick model : Modular: Issues related non-linearity growth curves observed scale can treated separately, .e., outside broken stick model; Local: given data point contribute estimates corresponding closest break ages; Exportable: broken stick model can exported reused prediction new data alternative computing environments. brokenstick package contains functions Fitting broken stick model data, Plotting individual trajectories, Predicting broken stick estimates new data.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/index.html","id":"background","dir":"","previous_headings":"Resources","what":"Background","title":"Broken Stick Model for Irregular Longitudinal Data","text":"took name broken stick Ruppert, Wand, Carroll (2003), page 59-61, actually much older. far know, de Kroon et al. (2010) first publication uses broken stick model without intercept mixed modelling context. See Terneuzen birth cohort: BMI changes 2 6 years correlate strongest adult overweight. model formally defined extended Flexible Imputation Missing Data (second edition). See van Buuren (2018). evaluation Anderson et al. (2019) concluded: recommend use brokenstick model standardised Z‐score data. Aside accuracy fit, another key advantage brokenstick model easier fit provides easily interpretable estimates child growth trajectories.","code":""},{"path":"https://growthcharts.org/brokenstick/index.html","id":"instructive-materials","dir":"","previous_headings":"Resources","what":"Instructive materials","title":"Broken Stick Model for Irregular Longitudinal Data","text":"Companion site contains vignettes articles explain model use software; Paper preparation: Broken Stick Model Irregular Longitudinal Data: html.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Bayes predictor for random effects — EB","title":"Empirical Bayes predictor for random effects — EB","text":"function can estimate random effect given set model estimates new user data. unit may new model. methods implements EB estimate (also known BLUP) described Skrondral Rabe-Hasketh, 2009, p. 683. function can also provide broken stick estimate given level, sum global (fixed) individual (random) effects. current implementation provide prediction errors.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Bayes predictor for random effects — EB","text":"","code":"EB(model, y, X, Z = X, BS = TRUE)"},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Bayes predictor for random effects — EB","text":"model object class brokenstick. y vector new measurements unit j, scaled metric fitted model. X nj * p matrix fixed effects unit j, typically produced bs(). Z nj * q matrix random effects unit j. default sets Z equal X. BS logical indicating whether broken stick estimates returned (BS = TRUE) random effects (BS = FALSE). default TRUE.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical Bayes predictor for random effects — EB","text":"vector length q containing random effect broken stick  estimates unit j.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Empirical Bayes predictor for random effects — EB","text":"Skrondal, ., Rabe-Hesketh, S. (2009). Prediction multilevel generalized linear models. J. R. Statist. Soc. , 172, 3, 659-687.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/EB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Empirical Bayes predictor for random effects — EB","text":"Stef van Buuren, 2015/2020","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class brokenstick — brokenstick-class","title":"Class brokenstick — brokenstick-class","text":"main fitting function brokenstick() returns object class brokenstick. object collects fitted broken stick model.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class brokenstick — brokenstick-class","text":"package exports S3 methods brokenstick class following generic functions: coef(), fitted(), model.frame(), model.matrix(), plot(), predict(), print(), residuals() summary(). package exports following helper functions brokenstick objects: get_knots(), get_omega() get_r2(). brokenstick object list following named elements:","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-class.html","id":"elements","dir":"Reference","previous_headings":"","what":"Elements","title":"Class brokenstick — brokenstick-class","text":"call Call created object names named list three elements (\"x\", \"y\", \"g\") providing variable name time, outcome subject, respectively. internal Numeric vector internal knots. boundary Numeric vector length 2 boundary knots. degree degree B-spline. See splines::bs(). Support values 0 (step model) 1 (broken stick model). method String, either \"kr\" \"lmer\", identifying fitting model. control List control options returned set_control() used set algorithmic details. beta Numeric vector fixed effect estimates. omega Numeric matrix variance-covariance estimates broken stick estimates. sigma2 Numeric scalar mean residual variance. sample numeric vector descriptives training data. light returned object lighter? light = TRUE returned object contain model settings parameter estimates store sigma2j, sample, data, imp mod elements. light object can used predict broken stick estimates new data, disclose training data small. sigma2j Numeric vector estimates residual variance per group. used method \"kr\". data training data used fit model. imp imputations generated missing outcome data. method = \"kr\". mod method = \"kr\": named list four components, class coda::mcmc. method = \"lmer\": object class lme4::merMod.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-class.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class brokenstick — brokenstick-class","text":"van Buuren S (2021). Broken Stick Model Irregular Longitudinal Data. preparation.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class brokenstick — brokenstick-class","text":"Stef van Buuren, 2021","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","title":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","text":"broken stick model describes set individual curves linear mixed model using second-order linear B-splines. main use model align irregularly observed data user-specified grid break ages.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-pkg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","text":"brokenstick package contains functions fitting broken stick model data, predicting broken stick curves new data, plotting results.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-pkg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","text":"Development package kindly supported Healthy Birth, Growth Development knowledge integration (HBGDki) program Bill & Melinda Gates Foundation.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-pkg.html","id":"brokenstick-functions","dir":"Reference","previous_headings":"","what":"brokenstick functions","title":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","text":"main functions : following functions user-oriented helpers: following functions perform calculations:","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick-pkg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"brokenstick: A package for irregular longitudinal data. — brokenstick-pkg","text":"van Buuren, S. (2018). Flexible Imputation Missing Data. Second Edition. Chapman & Hall/CRC. Chapter 11. https://stefvanbuuren.name/fimd/sec-rastering.html#sec:brokenstick","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a brokenstick model to irregular data — brokenstick","title":"Fit a brokenstick model to irregular data — brokenstick","text":"brokenstick() function fits irregularly observed series measurements onto user-specified grid points (knots). model codes grid series linear B-splines. modelled trajectory consists straight lines join chosen knots look like broken stick. Differences observations expressed random effect per knot.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a brokenstick model to irregular data — brokenstick","text":"","code":"brokenstick(   formula,   data,   knots = NULL,   boundary = NULL,   k = 5L,   degree = 1L,   method = c(\"kr\", \"lmer\"),   control = set_control(method = method, ...),   na.action = na.exclude,   light = FALSE,   ... )"},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a brokenstick model to irregular data — brokenstick","text":"formula formula specifying outcome, predictor group variable data. generic shape formula = y ~ x | group. left-hand side outcome, right-hand side predictor, name grouping variable occurs | sign. Formula treatment non-standard: 1) y x numeric, 2) one variable allowed model term (additional variables ignored). data data frame matrix containing outcome (numeric), predictor (numeric) group (numeric, factor, character) variable. knots Optional, recommended. Numerical vector locations internal knots placed values predictor. function sorts internal knots increasing order. boundary Optional, recommended. Numerical vector length 2 left right boundary knot. boundary setting passed splines::bs() Boundary.knots argument. specified, function determines boundary knots range(x). specified, boundary range internally expanded include least range(knots). k Optional, convenience parameter number internal knots. specified, k internal knots placed equidense quantiles predictor. example, specifying k = 1 puts knot 50th quantile (median), setting k = 3 puts knots 25th, 50th 75th quantiles, . user specifies k knots arguments knots takes precedence. default k = 5, user specify knots, boundary k, knots 16th, 33th, 50th, 66th 84th quantile predictor. degree degree spline. broken stick model requires linear splines, default degree = 1. Setting degree = 0 yields (crisp) dummy coding, one column less degree = 1. brokenstick package supports degree = 0 degree = 1. method Estimation method. Either \"kr\" (Kasim-Raudenbush sampler) \"lmer\" (lme4::lmer()). Version 1.1.1.9000 changed default method = \"kr\". control List control options returned set_control() used set algorithmic details. list parameters. specified, functions sets defaults method \"kr\" control_kr(), method \"lmer\" lme4::lmerControl(). ease use, user may set individual options \"kr\" (e.g. niter = 500) via ... arguments. na.action function indicates lme4::lmer() data contain NAs. Default set na.exclude. used method \"lmer\". light returned object lighter? light = TRUE returned object contain model settings parameter estimates store data, imp mod elements. light object can used predict broken stick estimates new data, disclose training data small (often <20 Kb). ... Forwards arguments control_kr().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a brokenstick model to irregular data — brokenstick","text":"object class brokenstick.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a brokenstick model to irregular data — brokenstick","text":"choice method = \"kr\" method = \"lmer\" depends size data complexity model. general, setting method = \"lmer\" can require substantial calculation time complex models (say > 8 internal knots) may converge. Method \"kr\" less sensitive model complexity small samples, added benefit variance-covariance matrix random effects can constrained cormodel argument. hand, \"lmer\" better-researched method, efficient simpler models datasets many rows. default algorithm since version 2.0 Bayesian Kasim-Raudenbush sampler (method = \"kr\"). variance-covariance matrix broken stick estimates absorbs relations time. \"kr\" method allows enforcing simple structure variance-covariance matrix. Currently, three correlation models: \"none\" (default), \"argyle\" \"cole\". Specify seed argument reproducibility. See control_kr() details. alternative method = \"lmer\" fits broken stick model lme4::lmer(). method, variance-covariance matrix can unstructured. estimate may unstable number children small relative number specified knots. default setting lme4::lmerControl()  check.nobs.vs.nRE= \"stop\". [set_control()] function changes check.nobs.vs.nRE= \"warning\" default, since otherwise many broken stick models run . method throws warnings estimates stable. can time models many internal knots. Despite warnings, results often look reasonable. Diagnostics coda lme4: function returns object class brokenstick. method = \"kr\" list component named \"mod\" contains list mcmc objects can analysed coda::acfplot(), coda::autocorr(), coda::crosscorr(), coda::cumuplot(), coda::densplot(), coda::effectiveSize(), coda::geweke.plot(), coda::raftery.diag(), coda::traceplot() usual plot() summary() functions. method = \"lmer\" list component named \"mod\" contains object class lme4::merMod. model objects omitted light brokenstick objects.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a brokenstick model to irregular data — brokenstick","text":"Note automatic knot specification data-dependent, may reproduce data. Likewise, knots specified via k data-dependent transfer  data sets. Fixing model requires specifying knots boundary.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/brokenstick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a brokenstick model to irregular data — brokenstick","text":"","code":"# \\donttest{ data <- smocc_200[1:1198, ]  # using kr method, default f1 <- brokenstick(hgt_z ~ age | id, data, knots = 0:3, seed = 123) plot(f1, data, n_plot = 9)   # study sampling behaviour of the sigma2 parameter with coda library(\"coda\") plot(f1$mod$sigma2)  acfplot(f1$mod$sigma2)   # using lmer method f2 <- brokenstick(hgt_z ~ age | id, data, knots = 0:3, method = \"lmer\") #> Warning: Model failed to converge with max|grad| = 0.00940367 (tol = 0.002, component 1) plot(f2, data, n_plot = 9)   # drill down into merMod object with standard diagnostics in lme4 summary(f2$mod) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: hgt_z ~ 0 + age_0 + age_1 + age_2 + age_3 + (0 + age_0 + age_1 +   #>     age_2 + age_3 | id) #>    Data: data #> Control: control #>  #> REML criterion at convergence: 2087.9 #>  #> Scaled residuals:  #>     Min      1Q  Median      3Q     Max  #> -3.8279 -0.5272  0.0031  0.5705  3.4223  #>  #> Random effects: #>  Groups   Name  Variance Std.Dev. Corr           #>  id       age_0 1.2931   1.1372                  #>           age_1 0.6759   0.8221   0.47           #>           age_2 0.7065   0.8405   0.45 0.94      #>           age_3 5.2058   2.2816   0.44 0.52 0.65 #>  Residual       0.1783   0.4223                  #> Number of obs: 1185, groups:  id, 124 #>  #> Fixed effects: #>       Estimate Std. Error t value #> age_0 -0.02586    0.10453  -0.247 #> age_1  0.03509    0.07837   0.448 #> age_2  0.05964    0.08669   0.688 #> age_3  0.66582    1.08567   0.613 #>  #> Correlation of Fixed Effects: #>       age_0  age_1  age_2  #> age_1  0.407               #> age_2  0.396  0.722        #> age_3  0.072  0.139 -0.134 #> optimizer (nloptwrap) convergence code: 0 (OK) #> Model failed to converge with max|grad| = 0.00940367 (tol = 0.002, component 1) #>  plot(f2$mod)   # a model with more knots knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24, 36) / 12, 4)  # method kr takes about 2 seconds f3 <- brokenstick(hgt_z ~ age | id, data, knots, seed = 222) plot(f3, data, n_plot = 9)   # method lmer takes about 40 seconds f4 <- brokenstick(hgt_z ~ age | id, data, knots, method = \"lmer\") #> Warning: number of observations (=1185) <= number of random effects (=1364) for term (0 + age_0 + age_0.0833 + age_0.1667 + age_0.25 + age_0.5 + age_0.75 + age_1 + age_1.25 + age_1.5 + age_2 + age_3 | id); the random-effects parameters and the residual variance (or scale parameter) are probably unidentifiable #> boundary (singular) fit: see help('isSingular') plot(f4, data, n_plot = 9)  # }"},{"path":"https://growthcharts.org/brokenstick/reference/control_kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Set controls for Kasim-Raudenbush sampler — control_kr","title":"Set controls for Kasim-Raudenbush sampler — control_kr","text":"Set controls Kasim-Raudenbush sampler","code":""},{"path":"https://growthcharts.org/brokenstick/reference/control_kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set controls for Kasim-Raudenbush sampler — control_kr","text":"","code":"control_kr(   niter = 200L,   nimp = 0L,   start = 101L,   thin = 1L,   seed = NA_integer_,   cormodel = c(\"none\", \"argyle\", \"cole\"),   ... )"},{"path":"https://growthcharts.org/brokenstick/reference/control_kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set controls for Kasim-Raudenbush sampler — control_kr","text":"niter Integer. Number samples posterior. Default:  200. nimp Integer. Number multiple imputations. Default: 0. start Integer. iteration number first observation thin Integer. thinning interval consecutive observations seed Integer. Seed number base::set.seed(). Use NA bypass seed setting. cormodel String indicating correlation model: \"none\" (default), \"argyle\" \"cole\" ... Allow dot parameters","code":""},{"path":"https://growthcharts.org/brokenstick/reference/control_kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set controls for Kasim-Raudenbush sampler — control_kr","text":"list eight components. function calculates parameters end (iteration number last iteration) thin_imp (thinning factor multiple imputations) inputs.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fit_200.html","id":null,"dir":"Reference","previous_headings":"","what":"Broken stick model with nine lines for 200 children — fit_200","title":"Broken stick model with nine lines for 200 children — fit_200","text":"Object fit_200 class brokenstick contains fitted broken stick model, including training data diagnostics.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fit_200.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Broken stick model with nine lines for 200 children — fit_200","text":"object class brokenstick, fitted brokenstick().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fit_200.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Broken stick model with nine lines for 200 children — fit_200","text":"dataset constructed ","code":"knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24)/12, 4) fit_200 <- brokenstick(hgt_z ~ age | id, data = smocc_200,                        knots = knots, seed = 1)"},{"path":"https://growthcharts.org/brokenstick/reference/fit_200_light.html","id":null,"dir":"Reference","previous_headings":"","what":"Broken stick model with nine lines for 200 children (light) — fit_200_light","title":"Broken stick model with nine lines for 200 children (light) — fit_200_light","text":"Object fit_200_light class brokenstick stores model settings parameter estimates.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fit_200_light.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Broken stick model with nine lines for 200 children (light) — fit_200_light","text":"object class brokenstick, fitted brokenstick().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fit_200_light.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Broken stick model with nine lines for 200 children (light) — fit_200_light","text":"datasets constructed ","code":"knots <- round(c(0, 1, 2, 3, 6, 9, 12, 15, 18, 24)/12, 4) fit_200_light <- brokenstick(hgt_z ~ age | id, data = smocc_200,                        knots = knots,                        light = TRUE, seed = 1)"},{"path":"https://growthcharts.org/brokenstick/reference/fitted.brokenstick.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fitted values — fitted.brokenstick","title":"Calculate fitted values — fitted.brokenstick","text":"Calculate fitted values","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fitted.brokenstick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fitted values — fitted.brokenstick","text":"","code":"# S3 method for brokenstick fitted(object, newdata = NULL, ...)"},{"path":"https://growthcharts.org/brokenstick/reference/fitted.brokenstick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fitted values — fitted.brokenstick","text":"object brokenstick object. newdata Optional. data frame look variables predict. training data used omitted object$light FALSE. ... Additional arguments. Ignored.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/fitted.brokenstick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fitted values — fitted.brokenstick","text":"numerical vector predictions. number elements equals number rows newdata. newdata specified, function looks training data object element named data.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/get_knots.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the knots from a broken stick model — get_knots","title":"Obtain the knots from a broken stick model — get_knots","text":"Obtain knots broken stick model","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_knots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the knots from a broken stick model — get_knots","text":"","code":"get_knots(   object,   what = c(\"all\", \"internal\", \"boundary\", \"dropfirst\", \"droplast\") )"},{"path":"https://growthcharts.org/brokenstick/reference/get_knots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the knots from a broken stick model — get_knots","text":"object object class brokenstick character vector length 1. Valid values \"\", \"internal\", \"boundary\", \"dropfirst\" \"droplast\". default = \"\".","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_knots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the knots from a broken stick model — get_knots","text":"vector knot locations, either , internal boundary . result NULL object proper class. Returns numeric(0) internal knots.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_knots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain the knots from a broken stick model — get_knots","text":"","code":"get_knots(fit_200, \"internal\") #> [1] 0.0833 0.1667 0.2500 0.5000 0.7500 1.0000 1.2500 1.5000 2.0000"},{"path":"https://growthcharts.org/brokenstick/reference/get_omega.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variance and Correlation Components — get_omega","title":"Extract Variance and Correlation Components — get_omega","text":"Extracts variance-covariance correlation matrix brokenstick object.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_omega.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variance and Correlation Components — get_omega","text":"","code":"get_omega(x, what = c(\"cov\", \"cor\"), names = NULL)"},{"path":"https://growthcharts.org/brokenstick/reference/get_omega.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variance and Correlation Components — get_omega","text":"x Object class brokenstick Either \"cov\" (default) covariance matrix,  \"cor\" correlation matrix. names vector column names . specified, function automatically drops entries corresponding right boundary. Specify names = \"\" prevent dropping.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_omega.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variance and Correlation Components — get_omega","text":"numeric matrix, possibly zero rows columns names match","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_omega.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Variance and Correlation Components — get_omega","text":"","code":"f1 <- brokenstick(hgt_z ~ age | id, smocc_200[1:1000, ], knots = 0:3, seed = 1) get_omega(f1, \"cor\", c(\"age_1\", \"age_2\")) #>           age_1     age_2 #> age_1 1.0000000 0.9147632 #> age_2 0.9147632 1.0000000"},{"path":"https://growthcharts.org/brokenstick/reference/get_r2.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain proportion of explained variance from a broken stick model — get_r2","title":"Obtain proportion of explained variance from a broken stick model — get_r2","text":"Obtain proportion explained variance broken stick model","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_r2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain proportion of explained variance from a broken stick model — get_r2","text":"","code":"get_r2(object, newdata = NULL)"},{"path":"https://growthcharts.org/brokenstick/reference/get_r2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain proportion of explained variance from a broken stick model — get_r2","text":"object object class brokenstick newdata Data r.squared must calculated","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_r2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain proportion of explained variance from a broken stick model — get_r2","text":"Proportion explained variance","code":""},{"path":"https://growthcharts.org/brokenstick/reference/get_r2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain proportion of explained variance from a broken stick model — get_r2","text":"","code":"get_r2(fit_200) #> [1] 0.9808152 get_r2(fit_200_light, newdata = smocc_200) #> [1] 0.9808152"},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":null,"dir":"Reference","previous_headings":"","what":"Kasim-Raudenbush sampler for two-level normal model — kr","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"Simulates posterior distributions parameters two-level normal model heterogeneous within-cluster variances (Kasim Raudenbush, 1998). Imputations can drawn extra step algorithm.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"","code":"kr(y, x, g, control = control_kr())"},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"y Vector outcome value x Matrix predictor value g Vector group values control list created control_kr() sets algorithmic options sampler correlation model.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"object class kr, basically list components:   number rows imp equal number missing values outcome vector y. number columns equals nimp.","code":"* `beta`  Fixed effects * `omega` Variance-covariance of random effects * `sigma2_j` Residual variance per group * `sigma2` Average residual variance * `sample` Descriptive statistics about the data * `imp`   Numeric matrix with `nimp` multiple imputations. * `mod`   A list of objects of class [coda::mcmc()]"},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"speed Kasim-Raudenbush sampler almost independent number random effect, foremost depends total number iterations. defaults start = 100, n = 200 thin = 1 provide 200 parameter draws reasonable approximation variance-covariance matrix random effects. closer approximations 200 draws set control = control_kr(thin = 10) (better) thin = 20 (best), expense linear increase calculation time. Drawing fewer 50 observations recommended, results best treated indicative. possible draw multiple imputations setting nimp parameter. example, draw five imputations missing outcome specify control = control_kr(nimp = 5).","code":""},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"Kasim RM, Raudenbush SW. (1998). Application Gibbs sampling nested variance components models heterogeneous within-group variance. Journal Educational Behavioral Statistics, 23(2), 93--116.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/kr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Kasim-Raudenbush sampler for two-level normal model — kr","text":"Stef van Buuren, based mice::mice.impute.2l.norm()","code":""},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create linear splines basis — make_basis","title":"Create linear splines basis — make_basis","text":"function creates basis function second-order (linear) splines user-specific set break points.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create linear splines basis — make_basis","text":"","code":"make_basis(   x,   xname = \"x\",   internal = NULL,   boundary = range(x),   degree = 1L,   warn = TRUE )"},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create linear splines basis — make_basis","text":"x numeric vector xname predictor name. Default \"x\" internal vector internal knots, excluding boundary knots boundary vector external knots degree degree spline. broken stick model requires linear splines, default degree = 1. Setting degree = 0 yields (crisp) dummy coding, one column less degree = 1. warn logical indicating whether warnings splines::bs() given.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create linear splines basis — make_basis","text":"matrix length(x) rows length(breaks) columns, extra attributes described bs().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create linear splines basis — make_basis","text":"version 0.54, standard practice knots array always included boundary[1L].","code":""},{"path":"https://growthcharts.org/brokenstick/reference/make_basis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create linear splines basis — make_basis","text":"Stef van Buuren, 2020","code":""},{"path":"https://growthcharts.org/brokenstick/reference/parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse formula for brokenstick model — parse_formula","title":"Parse formula for brokenstick model — parse_formula","text":"bare bones formula parser extract variables names formulas y ~ x | g. return name first variable mentioned formula component.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse formula for brokenstick model — parse_formula","text":"","code":"parse_formula(f)"},{"path":"https://growthcharts.org/brokenstick/reference/parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse formula for brokenstick model — parse_formula","text":"f formula object","code":""},{"path":"https://growthcharts.org/brokenstick/reference/parse_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse formula for brokenstick model — parse_formula","text":"list elements x, y g. element length 1.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/parse_formula.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse formula for brokenstick model — parse_formula","text":"Stef van Buuren, 2020","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot observed and fitted trajectories by group — plot.brokenstick","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"plot method brokenstick object plots observed fitted trajectories one groups.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"","code":"# S3 method for brokenstick plot(x, newdata = NULL, ...)"},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"x object class brokenstick. newdata Optional. data frame look variables predict. training data used omitted object$light FALSE. ... Extra arguments passed predict.brokenstick() plot_trajectory().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"object class ggplot2::ggplot.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"default, plot(fit) plot observed fitted data first three groups data. default setting drops fitted value right boundary knot display.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"Stef van Buuren 2021","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot.brokenstick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot observed and fitted trajectories by group — plot.brokenstick","text":"","code":"if (FALSE) { # fit model on raw hgt with knots at 0, 1, 2 and 3 years fit1 <- brokenstick(hgt ~ age | id, smocc_200, knots = 0:3) gp <- c(10001, 10005, 10022) plot(fit1, group = gp, xlab = \"Age (years)\", ylab = \"Length (cm)\")  # fit model on standard deviation score fit2 <- brokenstick(hgt_z ~ age | id, smocc_200, knots = 0:3) plot(fit2, group = gp, xlab = \"Age (years)\", ylab = \"Length (SDS)\")  # built-in model with 11 knots plot(fit_200, group = gp, xlab = \"Age (years)\", ylab = \"Length (SDS)\") }"},{"path":"https://growthcharts.org/brokenstick/reference/plot_trajectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot observed and fitted trajectories from fitted brokenstick model — plot_trajectory","title":"Plot observed and fitted trajectories from fitted brokenstick model — plot_trajectory","text":"Plot observed fitted trajectories fitted brokenstick model","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot_trajectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot observed and fitted trajectories from fitted brokenstick model — plot_trajectory","text":"","code":"plot_trajectory(   x,   newdata = NULL,   what = \"droplast\",   .x = NULL,   group = NULL,   color_y = c(grDevices::hcl(240, 100, 40, 0.7), grDevices::hcl(240, 100, 40, 0.8)),   size_y = 2,   color_yhat = c(grDevices::hcl(0, 100, 40, 0.7), grDevices::hcl(0, 100, 40, 0.8)),   size_yhat = 2,   color_imp = c(\"grey80\", \"grey80\"),   size_imp = 2,   ncol = 3L,   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL,   show = c(TRUE, TRUE, FALSE),   n_plot = 3L,   scales = \"fixed\",   theme = ggplot2::theme_light(),   ... )"},{"path":"https://growthcharts.org/brokenstick/reference/plot_trajectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot observed and fitted trajectories from fitted brokenstick model — plot_trajectory","text":"x object class brokenstick. newdata data.frame matrix knots plot? See get_knots(). default, = \"droplast\", plot right boundary knot. .x x argument predict.brokenstick() function. group vector group identifications color_y character vector two elements specifying symbol line color measured data points size_y Dot size measured data points color_yhat character vector two elements specifying symbol line color predicted data points size_yhat Dot size predicted data points color_imp character vector two elements specifying symbol line color imputed data size_imp Dot size imputed data ncol Number columns plot xlab label x-axis ylab label y-axis xlim Vector length 2 range x-axis ylim Vector length 2 range y-axis show logical vector length 3. Element 1 specifies whether observed data plotted, element 2 specifies whether broken stick plotted, element 3 specifies whether imputations plotted. default c(TRUE, TRUE, FALSE). n_plot integer indicating number individual plots. default 3, plots trajectories first three groups. n_plot safety measure prevent unintended plots entire data set. scales Axis scaling, e.g. \"fixed\", \"free\", theme Plotting theme ... Extra arguments passed predict.brokenstick().","code":""},{"path":"https://growthcharts.org/brokenstick/reference/plot_trajectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot observed and fitted trajectories from fitted brokenstick model — plot_trajectory","text":"object class ggplot","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a brokenstick model — predict.brokenstick","title":"Predict from a brokenstick model — predict.brokenstick","text":"predictions broken stick model coincide group-conditional means random effects. function takes object class brokenstick returns predictions one several formats. user can calculate predictions new persons, .e., persons part fitted model, x y arguments.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a brokenstick model — predict.brokenstick","text":"","code":"# S3 method for brokenstick predict(   object,   newdata = NULL,   ...,   x = NULL,   y = NULL,   group = NULL,   what = \"all\",   shape = c(\"long\", \"wide\", \"vector\"),   include_data = TRUE,   strip_data = TRUE )"},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a brokenstick model — predict.brokenstick","text":"object brokenstick object. newdata Optional. data frame look variables predict. training data used omitted object$light FALSE. ... used, required extensibility. x Optional. numeric vector values predictor. also special keyword x = \"knots\" replaces x positions knots. y Optional. numeric vector measurements. group vector group identifications string: \"\" (default), \"internal\", \"boundary\", \"dropfirst\" \"droplast\" specify set knots predict. default, NULL, calculates knots. shape string: \"long\" (default), \"wide\" \"vector\" specifying shape return value. Note use \"wide\" many unique values x creates unwieldy, large sparse matrix. include_data logical indicating whether observed data object$data newdata included return value. default TRUE. Use include_data = FALSE keep added data points (e.g. knots observed data specified x y). Setting include_data = FALSE useful combination shape = \"wide\" avoid warning Values '.pred' uniquely identified. convenience, special case x = \"knots\" function overwrites include_data FALSE evade observed ages show wide matrix. strip_data Deprecated. Use include_data instead.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a brokenstick model — predict.brokenstick","text":"shape == \"long\" long data.frame predictions. x, y group specified, number rows data frame guaranteed number rows newdata. shape == \"wide\" wide data.frame predictions, one record per group. Note format inefficient observations times vary subjects. shape == \"vector\" vector predicted values, x-values groups. function finds data, throws warnings returns NULL.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict from a brokenstick model — predict.brokenstick","text":"function predict() calculates predictions every row newdata. user specifies newdata argument, function sets newdata equal training data (object$data object$light FALSE). light object without newdata argument, function throws warning \"Argument 'newdata' required light brokenstick object.\" returns NULL. possible tailor behaviour predict() x, y group arguments. exactly happens depends arguments specified: user specifies x, y group, function returns - every group newdata - predictions specified x values. method use data newdata. user specifies x y group, function forms hypothetical new group x y values. method uses information newdata, also works light brokenstick object. user specifies group, x y, function searches relevant data newdata limits predictions groups. useful user needs prediction one groups. work light brokenstick object. user specifies x group, y, function create new values x group, search relevant data newdata provide predictions values x groups. user specifies x, y group, function assumes vectors contain additional data top already available newdata. lengths x, y group must match. light brokenstick object, case effectively becomes case 6. See . case 5, now without newdata available. data specified x, y group form data frame. Matching newdata attempted, long group id's different training sample effectively new cases made.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a brokenstick model — predict.brokenstick","text":"","code":"library(\"dplyr\") #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # -- Data  train <- smocc_200[1:1198, ] test <- smocc_200[1199:1940, ]  # -- Fit model  fit <- brokenstick(hgt_z ~ age | id, data = train, knots = 0:3, seed = 1) fit_light <- brokenstick(hgt_z ~ age | id,   data = train, knots = 0:3,   light = TRUE, seed = 1 ) if (FALSE) { # -- Predict, standard cases  # Use train data, return column with predictions pred <- predict(fit) identical(nrow(train), nrow(pred))  # Predict without newdata, not possible for light object predict(fit_light)  # Use test data pred <- predict(fit, newdata = test) identical(nrow(test), nrow(pred))  # Predict, same but using newdata with the light object pred_light <- predict(fit_light, newdata = test) identical(pred, pred_light)   # -- Predict, special cases   # -- Case 1: x, -y, -group  # Case 1: x as \"knots\", standard estimates, train sample (n = 124) z <- predict(fit, x = \"knots\", shape = \"wide\") head(z, 3)  # Case 1: x as values, linearly interpolated, train sample (n = 124) z <- predict(fit, x = c(0.5, 1, 1.5), shape = \"wide\", include_data = FALSE) head(z, 3)  # Case 1: x as values, linearly interpolated, test sample (n = 76) z <- predict(fit, test, x = c(0.5, 1, 1.5), shape = \"wide\", include_data = FALSE) head(z, 3)  # Case 1: x, not possible for light object z <- predict(fit_light, x = \"knots\")  # -- Case 2: x, y, -group  # Case 2: form one new group with id = 0 predict(fit, x = \"knots\", y = c(1, 1, 0.5, 0), shape = \"wide\")  # Case 2: works also for a light object predict(fit_light, x = \"knots\", y = c(1, 1, 0.5, 0), shape = \"wide\")   # -- Case 3: -x, -y, group  # Case 3: Predict at observed age for subset of groups, training sample pred <- predict(fit, group = c(10001, 10005, 10022)) head(pred, 3)  # Case 3: Of course, we cannot do this for light objects pred_light <- predict(fit_light, group = c(10001, 10005, 10022))  # Case 3: We can use another sample. Note there is no child 999 pred <- predict(fit, test, group = c(11045, 11120, 999)) tail(pred, 3)  # Case 3: Works also for a light object pred_light <- predict(fit_light, test, group = c(11045, 11120, 999)) identical(pred, pred_light)  # -- Case 4: x, -y, group  # Case 4: Predict at specified x, only in selected groups, train sample pred <- predict(fit, x = c(0.5, 1, 1.25), group = c(10001, 10005, 10022),         include_data = FALSE) pred  # Case 4: Same, but include observed data and sort pred_all <- predict(fit,   x = c(0.5, 1, 1.25), group = c(10001, 10005, 10022)) %>%   dplyr::arrange(id, age)  # Case 4: Applies also to test sample pred <- predict(fit, test, x = c(0.5, 1, 1.25), group = c(11045, 11120, 999),  include_data = FALSE) pred  # Case 4: Works also with light object pred_light <- predict(fit_light, test, x = c(0.5, 1, 1.25),   group = c(11045, 11120, 999), include_data = FALSE) identical(pred_light, pred)  # -- Case 5: x, y, group  # Case 5: Add new data to training sample, and refreshes broken stick # estimate at age x. # Note that novel child (not in train) 999 has one data point predict(fit,   x = c(0.9, 0.9, 0.9), y = c(1, 1, 1),   group = c(10001, 10005, 999), include_data = FALSE)  # Case 5: Same, but now for test sample. Novel child 899 has two data points predict(fit, test,   x = c(0.5, 0.9, 0.6, 0.9),   y = c(0, 0.5, 0.5, 0.6), group = c(11045, 11120, 899, 899),   include_data = FALSE)  # Case 5: Also works for light object predict(fit_light, test,   x = c(0.5, 0.9, 0.6, 0.9),   y = c(0, 0.5, 0.5, 0.6), group = c(11045, 11120, 899, 899),   include_data = FALSE)   # -- Case 6: As Case 5, but without previous data  # Case 6: Same call as last, but now without newdata = test # All children are de facto novel as they do not occur in the training # or test samples. # Note: Predictions for 11045 and 11120 differ from prediction in Case 5. predict(fit,   x = c(0.5, 0.9, 0.6, 0.9),   y = c(0, 0.5, 0.5, 0.6), group = c(11045, 11120, 899, 899))  # This also work for the light brokenstick object predict(fit_light,   x = c(0.5, 0.9, 0.6, 0.9),   y = c(0, 0.5, 0.5, 0.6), group = c(11045, 11120, 899, 899)) }"},{"path":"https://growthcharts.org/brokenstick/reference/residuals.brokenstick.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals from brokenstick model — residuals.brokenstick","title":"Extract residuals from brokenstick model — residuals.brokenstick","text":"Extract residuals brokenstick model","code":""},{"path":"https://growthcharts.org/brokenstick/reference/residuals.brokenstick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals from brokenstick model — residuals.brokenstick","text":"","code":"# S3 method for brokenstick residuals(object, newdata = NULL, ...)"},{"path":"https://growthcharts.org/brokenstick/reference/residuals.brokenstick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals from brokenstick model — residuals.brokenstick","text":"object brokenstick object. newdata Optional. data frame look variables predict. training data used omitted object$light FALSE. ... Additional arguments. Ignored.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/residuals.brokenstick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals from brokenstick model — residuals.brokenstick","text":"numerical vector residuals number elements equals number rows newdata. newdata specified, function looks training data object element named data.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/reference/set_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Set controls to steer calculations — set_control","title":"Set controls to steer calculations — set_control","text":"Set controls steer calculations","code":""},{"path":"https://growthcharts.org/brokenstick/reference/set_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set controls to steer calculations — set_control","text":"","code":"set_control(   method = c(\"kr\", \"lmer\"),   kr = control_kr(...),   lmer = lmerControl(check.nobs.vs.nRE = \"warning\"),   ... )"},{"path":"https://growthcharts.org/brokenstick/reference/set_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set controls to steer calculations — set_control","text":"method String indicating estimation method: \"kr\" \"lmer\" kr list generated control_kr. lmer list generated lme4::lmerControl. default set lmerControl(check.nobs.vs.nRE = \"warning\"), turns fatal errors respect number parameters warnings. Use lmerControl(check.nobs.vs.nRE = \"ignore\") silence lmer(). ... Forwards arguments control_kr()","code":""},{"path":"https://growthcharts.org/brokenstick/reference/set_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set controls to steer calculations — set_control","text":"method \"kr\", list returned control_kr(). method \"lmer\", object class lmerControl. methods, set_control() returns NULL.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/set_control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set controls to steer calculations — set_control","text":"","code":"# defaults control <- set_control() control #> $niter #> [1] 200 #>  #> $nimp #> [1] 0 #>  #> $start #> [1] 101 #>  #> $end #> [1] 301 #>  #> $thin #> [1] 1 #>  #> $thin_imp #> [1] Inf #>  #> $seed #> [1] NA #>  #> $cormodel #> [1] \"none\" #>"},{"path":"https://growthcharts.org/brokenstick/reference/smocc_200.html","id":null,"dir":"Reference","previous_headings":"","what":"Infant growth of 0-2 years, SMOCC data extract — smocc_200","title":"Infant growth of 0-2 years, SMOCC data extract — smocc_200","text":"Longitudinal height weight measurements ages 0-2 years representative sample 1933 Dutch children born 1988-1989. dataset smocc_200 sample size 200 full data.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/smocc_200.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infant growth of 0-2 years, SMOCC data extract — smocc_200","text":"tibble 1942 rows 7 columns: id ID, unique id child (numeric) age Decimal age, 0-2.68 years (numeric) sex Sex, \"male\" \"female\" (character) ga Gestational age, completed weeks (numeric) bw Birth weight grammes (numeric) hgt Height measurement cm (numeric) hgt_z Height SDS relative Fourth Dutch Growth Study 1997 (numeric)","code":""},{"path":"https://growthcharts.org/brokenstick/reference/smocc_200.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infant growth of 0-2 years, SMOCC data extract — smocc_200","text":"Herngreen WP, van Buuren S, van Wieringen JC, Reerink JD, Verloove-Vanhorick SP & Ruys JH (1994). Growth length weight birth 2 years representative sample Netherlands children (born 1988-89) related socio-economic status background characteristics. Annals Human Biology, 21, 449-463.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/weightloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Weight loss self-measurement data — weightloss","title":"Weight loss self-measurement data — weightloss","text":"Longitudinal weight measurements 12 individuals 63 daily measurement three conditions.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/weightloss.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Weight loss self-measurement data — weightloss","text":"data.frame 695 rows 6 columns: subject ID, consecutive person number 1-12 (integer) day Measurement day, 0-62 (integer) sex Sex, 1 = male, 0 = female (integer) week Week number, 1-9 (integer) condition Condition (control, diet, activity) (factor) body_weight Body weight kg (numeric)","code":""},{"path":"https://growthcharts.org/brokenstick/reference/weightloss.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Weight loss self-measurement data — weightloss","text":"Krone T, Boessen R, Bijlsma S, van Stokkum R, Clabbers NDS, Pasman WJ (2020). possibilities use N--1 --trials nutritional research. PloS ONE, 15, 5, e0232680.","code":""},{"path":"https://growthcharts.org/brokenstick/reference/weightloss.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Weight loss self-measurement data — weightloss","text":"Constructed file pone.0232680.s001.csv. renumbered subject consecutive integers 1-2 (paper), corrected error condition variable subjects 4 12 match paper's Figure 4, filtered records ones woth observed body_weight variable.","code":""},{"path":[]},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"major-changes-2-2-0","dir":"Changelog","previous_headings":"","what":"Major changes:","title":"brokenstick 2.2.0","text":"Changes default number knots brokenstick() 5. former default produced solution without internal knots. new default produces generally informative starting model user specify knots (using knots = c(..., ...)) number knots (using k = ...). Replaces strip_data argument predict() intuitive include_data argument. default, observed data now included predictions, similar predict.lm(). Turns error Argument 'newdata' required light brokenstick object. brokenstick() warning returns NULL. Updates vignette Broken Stick Model Irregular Longitudinal Data sync revision JSS.","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"minor-changes-2-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes:","title":"brokenstick 2.2.0","text":"Expression predict(fit_200_light, x = \"knots\") now produces warning message instead crashing Updates objects fit_200 fit_200_light use automatic boundary (2.68y) instead 3 yrs Automatically sorts user-specified values knots increasing order evade problems predict()","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-210","dir":"Changelog","previous_headings":"","what":"brokenstick 2.1.0","title":"brokenstick 2.1.0","text":"CRAN release: 2022-03-30","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"incorporate-changes-and-updates-required-by-jss-2-1-0","dir":"Changelog","previous_headings":"","what":"Incorporate changes and updates required by JSS","title":"brokenstick 2.1.0","text":"Reorganises vignettes Renames brokenstick-article.Rmd manual/manual.Rmd, include high-res version site take package save space Updates vignettes/bibliography.bib title case Removes superfluous navigation vigettes Defines model.frame.brokenstick() function adheres conventions Changes return values fitted() residuals() vectors Defines less verbose print.brokenstick() helper Make calls library() character argument Removes library(lme4) code evade changing search path","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-202","dir":"Changelog","previous_headings":"","what":"brokenstick 2.0.2","title":"brokenstick 2.0.2","text":"Shrinks size brokenstick object removing formula list element","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-201","dir":"Changelog","previous_headings":"","what":"brokenstick 2.0.1","title":"brokenstick 2.0.1","text":"Shrinks size light objects removing sigma2j vector light brokenstick class","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-200","dir":"Changelog","previous_headings":"","what":"brokenstick 2.0.0","title":"brokenstick 2.0.0","text":"CRAN release: 2021-11-11","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"main-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Main changes","title":"brokenstick 2.0.0","text":"Function brokenstick() version 2.0.0 sets Kasim-Raudenbush sampler default method. former method lme4::lmer() remains available setting method = \"lmer\" argument. Version 2.0.0 adopts variable names coda package (e.g., start, end, thin, niter, ) stores results Kasim-Raudenbush sampler objects class mcmc. method = \"kr\" one may now inspect solution sampler standard functions coda package. method = \"lmer\" can apply functions lme4 package merMod objects. Version 2.0.0 redefines brokenstick class. New entries include call, formula, internal, sample, light, data, imp mod. Removed entries knots (renamed internal) draws (renamed imp). may omit newdata argument training data. Setting light = TRUE creates small version brokenstick object. Objects class brokenstick backwards compatible, one regenerate objects class brokenstick order use newer features 2.0.0. Version 2.0.0 conforms classic model fitting interface R. Renames new_data argument newdata conform predict.lm(). Methods plot() predict() longer require newdata argument. special cases predict() updated explained documentation examples. Version 2.0.0 adds methods coef(), fitted(), model.frame(), model.matrix(), print() summary brokenstick object. Simplifies algorithmic control. Renames control_brokenstick() set_control() removes layer control list.","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"minor-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"brokenstick 2.0.0","text":"Stabilises rgamma() calls KR-algorithm edge cases. predict_brokenstick() can now work (internal) training (external) test data. Removes superfluous type argument predict.brokenstick() Adds function get_omega() extract variance-covariance matrix broken stick estimates Adds choice \"dropfirst\" get_knots() Improves error messages edge cases test-brokenstick_edge.R Perform stricter tests arguments brokenstick() Introduces argument warn_splines make_basis() suppress uninteresting warns splines::bs() Removes superfluous knotnames argument make_basis() Argument x make_basis() now vector instead column vector Introduces new xname argument make_basis() set xname","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-111","dir":"Changelog","previous_headings":"","what":"brokenstick 1.1.1","title":"brokenstick 1.1.1","text":"Handles edge case crashed predict()","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-110","dir":"Changelog","previous_headings":"","what":"brokenstick 1.1.0","title":"brokenstick 1.1.0","text":"CRAN release: 2020-11-02 version adds couple minor alterations. Updates cran-comments Adds link JSS manuscript description field Removes unnecessary \\dontrun{} directives Exports parse_formula() remove ::: examples Sanitises chunk names removing : _ characters Corrects “first-order” mindo’s “second-order” Repairs plotting glitch oldfriends.Rmd Limits number printed rows predict.brokenstick() example","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-100","dir":"Changelog","previous_headings":"","what":"brokenstick 1.0.0","title":"brokenstick 1.0.0","text":"Ready CRAN –> Move version 1.0.0 package now hosted https://github.com/growthcharts/brokenstick/","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0780","dir":"Changelog","previous_headings":"","what":"brokenstick 0.78.0","title":"brokenstick 0.78.0","text":"Prepare package first CRAN submission","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0770","dir":"Changelog","previous_headings":"","what":"brokenstick 0.77.0","title":"brokenstick 0.77.0","text":"Add documentation brokenstick class object Add JSS manuscript vignette Remove prediction vignette dependencies Extend plot.brokenstick() ability plot imputed trajectories Add weightloss data Fail early user specifies degree > 1","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0760","dir":"Changelog","previous_headings":"","what":"brokenstick 0.76.0","title":"brokenstick 0.76.0","text":"Adds argument plot.brokenstick() Solves bug always yielded zero rows case 3 prediction Solves data combination problem predict() group variable factor Add better explanation boundary parameter Evades model.matrix() removes rows NA degree = 0","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0750","dir":"Changelog","previous_headings":"","what":"brokenstick 0.75.0","title":"brokenstick 0.75.0","text":"version trims package various ways Removes dependencies hardhat recipes Makes brokenstick object smaller since blueprints stored Removes recipe interface brokenstick() function Moves ggplot2 suggests Copies install..demand() function mice","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0721","dir":"Changelog","previous_headings":"","what":"brokenstick 0.72.1","title":"brokenstick 0.72.1","text":"Imports recipes::recipe() inform R package installation process","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0720","dir":"Changelog","previous_headings":"","what":"brokenstick 0.72.0","title":"brokenstick 0.72.0","text":"Adds badges, resources references README Updates license Updates CITATION","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0710","dir":"Changelog","previous_headings":"","what":"brokenstick 0.71.0","title":"brokenstick 0.71.0","text":"Removes dependency growthstandards Updates corrects plot examples Tries evade ggplot2 --range/missing messages better filtering","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0701","dir":"Changelog","previous_headings":"","what":"brokenstick 0.70.1","title":"brokenstick 0.70.1","text":"Adds support brokenstick model degree = 0","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0700","dir":"Changelog","previous_headings":"","what":"brokenstick 0.70.0","title":"brokenstick 0.70.0","text":"version jump illustrates big breaking changes: brokenstick adopted tidymodels philosophy, now includes dependency hardhat. now possible fit model using five different interfaces. need anymore hardcode variable names source data. version introduces new estimation method, Kasim-Raudenbush sampler. new method flexible faster lme4::lmer() number knots large. version introduces two simple correlation models may used smooth variance-covariance matrix random effects. definition brokenstick class changed. Objects class brokenstick longer store training data. brokenstick_export class retired. predict() function fully rewritten now new interface. Since brokenstick class store training data anymore, predict() function now obtains new_data argument. Syntax worked brokenstick package 0.70.0 work anymore updated. shape argument replaces output argument. plot() function rewritten, now requires new_data specification. Retired functions: brokenstick() replaces fit_brokenstick(), predict.brokenstick() replaces predict.brokenstick_export(), get_r2() replaces get_pev() Removed functions: get_data(), get_X(), export()","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0620","dir":"Changelog","previous_headings":"","what":"brokenstick 0.62.0","title":"brokenstick 0.62.0","text":"version simplifies plotting functions Renders ggplot objects sharper vignettes svglite Drops pkg argument plot.brokenstick() Lessens dependency rbokeh Replaces hbgd (longer developed) growthstandards package Replaces smocc_50/fit_50 smocc_200/fit_200 Added NEWS.md file track changes package","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0610","dir":"Changelog","previous_headings":"","what":"brokenstick 0.61.0","title":"brokenstick 0.61.0","text":"Added smocc_50 fit_50 demo data Removed smocc.hgtwgt, smocc_hgtwgt fit_206 datasets Adapt code vignettes reflect replacement demo data","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-0600","dir":"Changelog","previous_headings":"","what":"brokenstick 0.60.0","title":"brokenstick 0.60.0","text":"Adapted source R 4.0.0.","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-055","dir":"Changelog","previous_headings":"","what":"brokenstick 0.55","title":"brokenstick 0.55","text":"Added new utility function get_pev() proportion explained variance get_knots() gets argument Now using smarter defaults plot() Simplified arguments plot() Simplified vignette “Overview main functions”","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-054","dir":"Changelog","previous_headings":"","what":"brokenstick 0.54","title":"brokenstick 0.54","text":"Added Support ggplot2 Made ggplot2 plot default Changed default show_references flag FALSE","code":""},{"path":"https://growthcharts.org/brokenstick/news/index.html","id":"brokenstick-053","dir":"Changelog","previous_headings":"","what":"brokenstick 0.53","title":"brokenstick 0.53","text":"version announced invited lecture 7th Channel Network Conference, Hasselt, Belgium. abstract lecture: Broken stick model individual growth curves Stef van Buuren Netherlands Organization Applied Scientific Research TNO Utrecht University broken stick model describes set individual curves linear mixed model using second-order linear B-splines. model can used smooth growth curves series connected straight lines; align irregularly observed curves common age grid; create synthetic curves user-specified set break ages; estimate time--time correlation matrix; predict future observations. user specifies set break ages straight lines connect. individual obtains estimate break age, set estimates individual form smoothed version observed trajectory. main assumptions broken stick model development break ages follows straight line, broken stick estimates follow common multivariate normal distribution. order conform assumption multivariate normality, user may fit broken stick model suitably transformed data yield standard normal (Z-score) scale. lecture outlines model introduces brokenstick R package.","code":""}]
